
@using APP.Util
@model SecurityClearanceWebApp.Models.RA42_SECURITY_PASS_DTL

@{
    ViewBag.Title = "Search";
    string align = "text-right";
    string alignInverse = "text-left";
    string dir = "ltr";
    if (ViewBag.lang == "ar")
    {
        align = "text-left";
        alignInverse = "text-right";
        dir = "rtl";
    }

    var agree = Resources.Common.ResourceManager.GetString("error_agree" + "_" + ViewBag.lang);
    var main_z = Resources.Passes.ResourceManager.GetString("main_zone" + "_" + ViewBag.lang);
    var sub_z = Resources.Passes.ResourceManager.GetString("sub_zone" + "_" + ViewBag.lang);
    var remove = Resources.Passes.ResourceManager.GetString("Remove" + "_" + ViewBag.lang);
    var all = Resources.Passes.ResourceManager.GetString("All" + "_" + ViewBag.lang);
    var choose_sub_z = Resources.Passes.ResourceManager.GetString("choose_sub_zone_again" + "_" + ViewBag.lang);
    var no_file_ = Resources.Passes.ResourceManager.GetString("not_allowed_m_ten" + "_" + ViewBag.lang);
    var no_zone_ = Resources.Passes.ResourceManager.GetString("not_allowed_m_50" + "_" + ViewBag.lang);
    var no_file_format = Resources.Passes.ResourceManager.GetString("file_format" + "_" + ViewBag.lang);
    var doc = Resources.Passes.ResourceManager.GetString("document_type" + "_" + ViewBag.lang);
    var required = Resources.Common.ResourceManager.GetString("required" + "_" + ViewBag.lang);
    var documents = Resources.Passes.ResourceManager.GetString("Documents" + "_" + ViewBag.lang);

    string barcode = Guid.NewGuid().ToString().Substring(0, 5);

}






<div class="container-fluid" dir="@dir">
    <div class="row">
        @if (ViewBag.RESPO_STATE > 1 || ViewBag.ADMIN == true || ViewBag.DEVELOPER == true)
        {
            @Html.Partial("Index")
        }


        <div class="col-md-12">

            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="row">
                        <div class="col-12">
                            <div class="row justify-content-center">
                                @Html.Partial("Tabs")

                            </div>
                        </div>
                        <div class="col-12"><hr /></div>

                        <div class="col-6 text-primary">
                            <h4>
                                <i class="fa fa-search"></i>
                                &nbsp;
                                @Resources.Passes.ResourceManager.GetString("Security_pass_Search" + "_" + ViewBag.lang)  (@ViewBag.STATION_NAME)
                            </h4>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-12 @align">
                            <a href="#" onclick="history.back()" class="btn btn-outline-dark">
                                <i class="fa fa-backward"></i>
                                @Resources.Passes.ResourceManager.GetString("back" + "_" + ViewBag.lang)
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @{
                        if (TempData["Success"] != null)
                        {
                            <p class="alert alert-success">@TempData["Success"]</p>
                        }
                        if (TempData["Erorr"] != null)
                        {
                            <p class="alert alert-danger">@TempData["Erorr"]</p>
                        }
                    }
                    @using (Html.BeginForm("Search", null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "if(document.getElementById('agree').checked) { return true; } else { alert('" + agree + "'); document.getElementById('confirm_r').style.color='red'; return false; }" }))

                    {
                        @Html.AntiForgeryToken()

                <div class="row">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="col-md-12">
                        <span class="alert-warning p-1 rounded">
                            <b class="text-danger"> * </b>@Resources.Passes.ResourceManager.GetString("required_fields" + "_" + ViewBag.lang)
                        </span>
                        <hr />
                    </div>
                    <div class="col-md-12">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Service_number" + "_" + ViewBag.lang)<b class="text-danger"> * </b>
                            <input type="text" name="SERVICE_NUMBER" class="service-number-input form-control" required="" oninvalid="this.setCustomValidity('@required')" oninput="setCustomValidity('')" />
                            @Html.ValidationMessageFor(model => model.SERVICE_NUMBER, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="row">
                            <div class="col-md-11">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Personal_image" + "_" + ViewBag.lang)
                                    <input type="file" name="PERSONAL_IMAGE" accept="image/*" class="form-control" onchange="showpreview(this);" />
                                    @Html.ValidationMessageFor(model => model.PERSONAL_IMAGE, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-1 p-2">
                                <img src="~/Content/images/adminpic.png" style="display: none;" width="50" height="50" id="imagePreview" />
                            </div>
                        </div>

                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Phone_number" + "_" + ViewBag.lang)

                            @Html.EditorFor(model => model.PHONE_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PHONE_NUMBER, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Gsm" + "_" + ViewBag.lang)<b class="text-danger"> * </b>

                            @Html.EditorFor(model => model.GSM, new { htmlAttributes = new { @class = "form-control", @required = "", @oninvalid = "this.setCustomValidity('" + required + "')", @oninput = "setCustomValidity('')" } })
                            @Html.ValidationMessageFor(model => model.GSM, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Identity" + "_" + ViewBag.lang)<b class="text-danger"> * </b>

                            @Html.DropDownList("IDENTITY_CODE", null, htmlAttributes: new { @class = "form-control", id = "IDENTITY", @Style = "width:100%", @required = "", @oninvalid = "this.setCustomValidity('" + required + "')", @oninput = "setCustomValidity('')" })
                            @Html.ValidationMessageFor(model => model.IDENTITY_CODE, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Gender" + "_" + ViewBag.lang)<b class="text-danger"> * </b>
                            @Html.DropDownList("GENDER_ID", null, htmlAttributes: new { @class = "form-control", id = "GENDER", @Style = "width:100%", @required = "", @oninvalid = "this.setCustomValidity('" + required + "')", @oninput = "setCustomValidity('')" })
                            @Html.ValidationMessageFor(model => model.GENDER_ID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @{
                        int se = 0;
                    }
                    @foreach (var i in ViewBag.SECTION_NAME)
                    {
                        se = se + 1;
                    }

                    @if (se != 0)
                    {
                        <div class="col-md-4">
                            <div class="form-group">
                                @Resources.Passes.ResourceManager.GetString("Unit_a" + "_" + ViewBag.lang)<b class="text-danger"> * </b>
                                <select name="UNIT_A" id="UNIT" required class="form-control w-100">
                                    <option value="">--اختر القسم--</option>
                                    @foreach (var item in ViewBag.SECTION_NAME)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            </div>
                        </div>
                    }



                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Pass_type" + "_" + ViewBag.lang)<b class="text-danger"> * </b>

                            @Html.DropDownList("PASS_TYPE_CODE", null, htmlAttributes: new { @class = "form-control", id = "PASSTYPECODE", @Style = "width:100%", @required = "", @oninvalid = "this.setCustomValidity('" + required + "')", @oninput = "setCustomValidity('')" })
                            @Html.ValidationMessageFor(model => model.PASS_TYPE_CODE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @if (ViewBag.RESPO_STATE <= 1 || (ViewBag.RESPO_STATE >= 5 && ViewBag.RESPO_STATE <= 11) || ViewBag.NOT_RELATED_STATION == true)
                    {
                        <div class="col-md-8">
                            <div class="form-group">

                                @Resources.Passes.ResourceManager.GetString("Workflow_respo" + "_" + ViewBag.lang) <b class="text-danger"> * </b>


                                @Html.DropDownList("WORKFLOW_RESPO_CODE", null, "--اختر--", htmlAttributes: new { @class = "form-control", id = "WORKFLOWRESPOCODE", @Style = "width:100%", @required = "" })
                                @Html.ValidationMessageFor(model => model.WORKFLOW_RESPO_CODE, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header">
                                @Resources.Passes.ResourceManager.GetString("Duration" + "_" + ViewBag.lang)
                            </div>
                            <div class="row p-2">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Property_issued" + "_" + ViewBag.lang)<b class="text-danger"> * </b>

                                        @Html.EditorFor(model => model.DATE_FROM, new { htmlAttributes = new { @class = "form-control", @required = "", onkeydown = "javascript: return false;", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.DATE_FROM, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Property_expired" + "_" + ViewBag.lang)<b class="text-danger"> * </b>

                                        @Html.EditorFor(model => model.DATE_TO, new { htmlAttributes = new { @class = "form-control", @required = "", onkeydown = "javascript: return false;", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.DATE_TO, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-12"><hr /></div>
                    <br />


                    <div class="col-md-6">

                        <div class="col-md-12">
                            <h5 class="alert alert-primary text-center">
                                <i class="fa fa-arrows-alt p-1"></i>  @main_z
                            </h5>
                        </div>

                        <div class="form-group">
                            <div class="col-md-12">
                                <div id="dvContainer"></div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">

                        <div class="col-md-12">
                            <h5 class="alert-secondary alert text-center">
                                <i class="fa fa-file-pdf p-1"></i> @documents
                            </h5>
                        </div>


                        <div class="form-group">
                            <div class="col-md-12">
                                <div id="fContainer"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("PURPOSE_OF_PASS" + "_" + ViewBag.lang)<b class="text-danger"> * </b>
                            @Html.TextAreaFor(model => model.PURPOSE_OF_PASS, new { @class = "form-control", @required = "", @oninvalid = "this.setCustomValidity('" + required + "')", @oninput = "setCustomValidity('')" })
                            @Html.ValidationMessageFor(model => model.PURPOSE_OF_PASS, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Remarks" + "_" + ViewBag.lang)
                            @Html.TextAreaFor(model => model.REMARKS, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.REMARKS, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @if (ViewBag.RESPO_STATE <= 1)
                    {
                        <div class="col-md-12">
                            <div style="overflow:scroll; height:200px;" class="overflow-auto">
                                @if (ViewBag.CAVEATES != null)
                                {
                                    if (Language.GetCurrentLang() == "en")
                                    {

                                        <div class="card shadow-lg bg-light">
                                            <div class="card-body">
                                                <div class="row">
                                                    <div class="col-12">
                                                        <h1 class="text-danger  text-center">
                                                            @Resources.Passes.ResourceManager.GetString("Security_caves" + "_" + ViewBag.lang)
                                                        </h1>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="card-body">
                                                @if (ViewBag.CAVEATES.FILE_IMAGE != null)
                                                {
                                                    <div class="text-center">
                                                        <img src="~/Files/Others/@ViewBag.CAVEATES.FILE_IMAGE" id="caveatesimg" onerror="this.onerror = null; this.src='@Url.Content("~/Content/images/adminpic.png")'" alt="security image">
                                                        <hr />
                                                    </div>
                                                }
                                                <p class="text-dark text-left" id="caveates" dir="ltr" style="white-space: pre-line;line-height: 30px;">
                                                    @ViewBag.CAVEATES.SECURITY_CAVEATES_EN
                                                    <br />
                                                </p>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="card shadow-lg bg-light">
                                            <div class="card-body">
                                                <div class="row">
                                                    <div class="col-12">

                                                        <h1 class="text-danger  text-center">
                                                            @Resources.Passes.ResourceManager.GetString("Security_caves" + "_" + ViewBag.lang)
                                                        </h1>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="card-body">
                                                @if (ViewBag.CAVEATES.FILE_IMAGE != null)
                                                {
                                                    <div class="text-center">
                                                        <img src="~/Files/Others/@ViewBag.CAVEATES.FILE_IMAGE" id="caveatesimg" onerror="this.onerror = null; this.src='@Url.Content("~/Content/images/adminpic.png")'" alt="security image">
                                                        <hr />
                                                    </div>
                                                }
                                                <p class="text-dark text-right" id="caveates" dir="rtl" style="white-space: pre-line; line-height: 30px;">
                                                    @ViewBag.CAVEATES.SECURITY_CAVEATES_AR

                                                    <br />

                                                </p>
                                            </div>
                                        </div>
                                    }
                                }


                            </div>
                            <div class="col-md-12">
                                <hr />

                                <div class="col-md-12">
                                    <div class="row">

                                        <div class="col-md-11">
                                            <p id="confirm_r"><input type="checkbox" name="checkbox" id="agree" /> @Resources.Passes.ResourceManager.GetString("Confirm_read" + "_" + ViewBag.lang)</p>
                                        </div>
                                        <div class="col-md-1 text-left">
                                            <a href="#" class="btn btn-dark" onclick="SecurityCaveates();"><i class="fa fa-book-reader"></i></a>
                                        </div>
                                    </div>

                                </div>
                                <hr />
                            </div>

                        </div>
                    }
                    else
                    {
                        <p id="confirm_r" style="display:none;"><input type="checkbox" name="checkbox" id="agree" checked style="display: none;" /> @Resources.Passes.ResourceManager.GetString("Confirm_read" + "_" + ViewBag.lang)</p>

                    }
                    @if (ViewBag.RESPO_STATE == 4 && ViewBag.NOT_RELATED_STATION != true)
                    {
                        <div class="col-md-4">
                            <div class="form-group">
                                @Resources.Passes.ResourceManager.GetString("Barcode" + "_" + ViewBag.lang)

                                <input class="form-control text-box single-line"
                                       value="@barcode"
                                       name="BARCODE" type="hidden" readonly />
                                <br />

                                <img id="barcode3" />
                                @Html.ValidationMessageFor(model => model.BARCODE, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    }
                    <div class="col-md-12">
                        <div class="form-group @align">
                            <button type="submit" value="Create" class="btn btn-success">
                                <i class="fa fa-plus-circle"></i> &nbsp;
                                @Resources.Common.ResourceManager.GetString("new_request" + "_" + ViewBag.lang)
                            </button>
                        </div>
                    </div>
                </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="Caveates" dir="@dir">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <div class="modal-header">
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-11">
                            <h4 id="ModalTitle_caveates">
                                @Resources.Passes.ResourceManager.GetString("Security_caves" + "_" + ViewBag.lang)
                            </h4>
                        </div>
                        <div class="col-md-1">
                            <a href="#" class="btn btn-secondary btn-sm" data-dismiss="modal"><i class="fa fa-window-close"></i></a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-body">



                <div class="col-md-12">


                    <div id="dimg" class="text-center"></div>
                    <hr />
                </div>
                <div class="col-md-12">
                    <h6 class="details-info-content text-dark" dir="@dir" style="white-space: pre-line; line-height: 30px;" id="cav"></h6>
                    <hr />
                </div>

            </div>

        </div>

    </div>
</div>

@section Scripts {
    <link href="~/Content/select2.min.css" rel="stylesheet" />
    <script src="~/Scripts/select2.min.js"></script>
    <link href="~/Content/Kendo/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="~/Content/Kendo/styles/kendo.default.min.css" rel="stylesheet" />
    <script src="~/Scripts/Kendo/js/kendo.all.min.js"></script>
    <script>
        $(document).ready(function () {
            showProgressBar($(".service-number-field"));
            showServiceInfo($(".service-number-field"));
            AddFiles();
            AddZones();
            $("#WORKFLOWRESPOCODE").select2();

            $(function () {
                var dateToday = new Date();
                var yrRange = dateToday.getFullYear() + ":" + (dateToday.getFullYear() + 1);
                $("#DATE_FROM").datepicker({
                    //minDate: 0,
                    dateFormat: "dd/mm/yy",
                    yearRange: yrRange,
                    changeMonth: true,
                    numberOfMonths: 1,
                    changeYear: true,
                    onClose: function (selectedDate, inst) {
                        var minDate = new Date(Date.parse(selectedDate));
                        //minDate.setDate(maxDate.getDate() + 1);
                        $("#DATE_TO").datepicker("option", "minDate", selectedDate);
                    }
                });

                $("#DATE_TO").datepicker({
                    minDate: "+1D",
                    dateFormat: "dd/mm/yy",
                    yearRange: yrRange,
                    changeMonth: true,
                    numberOfMonths: 1,
                    changeYear: true,
                    onClose: function (selectedDate, inst) {
                        var maxDate = new Date(Date.parse(selectedDate));
                         //maxDate.setDate(maxDate.getDate() - 1);
                        //$("#DATE_FROM").datepicker("option", "maxDate", maxDate);
                    }
                });
            });
            $("#UNIT").select2();

            $("#IDENTITY").kendoComboBox({
                filter: "contains",
                change: function (e) {
                    var widget = e.sender;

                    if (widget.value() && widget.select() === -1) {
                        //custom has been selected
                        widget.value(""); //reset widget
                        //widget.trigger("change");
                    }
                }
            });

            $("#GENDER").kendoComboBox({
                filter: "contains",
                change: function (e) {
                    var widget = e.sender;

                    if (widget.value() && widget.select() === -1) {
                        //custom has been selected
                        widget.value(""); //reset widget
                        //widget.trigger("change");
                    }
                }
            });

            $("#PASSTYPECODE").kendoComboBox({
                filter: "contains",
                change: function (e) {
                    var widget = e.sender;

                    if (widget.value() && widget.select() === -1) {
                        //custom has been selected
                        widget.value(""); //reset widget
                        //widget.trigger("change");
                    }
                }
            });


        });


    </script>

    <script>

      function showpreview(input) {

            if (input.files && input.files[0]) {

                var val = $(input).val().toLowerCase(),
                    regex = new RegExp("(.*?)\.(gif|jpg|jpeg|JPEG|GIF|JPG)$");

                if (!(regex.test(val))) {
                    $(input).val('');
                    $('#imagePreview').css('display', 'none');

                    alert('@no_file_format');

                }
                else {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#imagePreview').css('display', 'inline');
                        $('#imagePreview').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }
        }

        function AddZones() {


                var zones = JSON.parse('@Html.Raw(Json.Encode(ViewBag.ZONE_CODE))');


                var dvContainer = document.getElementById("dvContainer");
                var div = document.createElement("DIV");
                div.className = "bg-light rounded";
                //Add data
            for (var i = 0; i < zones.length; i++) {
                var ddlZones = document.createElement("INPUT");
                ddlZones.type = "checkbox"
                ddlZones.name = "ZONE[]"
                ddlZones.className = "m-2";
                ddlZones.id = "zone" + i;
                ddlZones.value = zones[i].Value;

                var Sub_ddlZones = document.createElement("INPUT");
                Sub_ddlZones.type = "text"
                Sub_ddlZones.name = "SUB_ZONE[]"
                Sub_ddlZones.value = 0;
                Sub_ddlZones.hidden = true;

                var label = document.createElement("label");
                    //Set zone Name in Text part.
                    label.htmlFor = "zone" + i;
                    label.appendChild(document.createTextNode(zones[i].Text));
                    //Set value in Value part.
                    //Add to DIV.

                    var br2 = document.createElement("br");

                    div.appendChild(ddlZones);
                    div.appendChild(label);
                    div.appendChild(Sub_ddlZones);
                    div.appendChild(br2);
                    dvContainer.appendChild(div);

                }


            }



       function AddFiles() {
            //Build an array containing Customer records.


                var file_types = JSON.parse('@Html.Raw(Json.Encode(ViewBag.FILE_TYPES))');



                //Reference the container DIV.
                var fContainer = document.getElementById("fContainer")
                //Add  to DIV.
                var div = document.createElement("DIV");
                div.className = "bg-light p-2 rounded";
                div.id = "file_div";




                //Add the Options to the DropDownList.
                for (var i = 0; i < file_types.length; i++) {
                    //Create  element.

                    var val = file_types[i].Text.split(/-(.*)/)[1];
                    console.log(val);
                    var val2 = file_types[i].Text.replace(/\-.*/g, "$'");



                    var files = document.createElement("INPUT");
                    files.name = "files";
                    files.type = "file";
                    files.id = "file_" + file_types[i].Value+"_"+val;
                    files.className = "form-control m-1";
                    files.onchange = function () { setFileType(this.id); };


                    var label = document.createElement("label");
                    //Set file Name in Text part.
                    label.htmlFor = "file_types_text" + i;
                    label.appendChild(document.createTextNode(val2));

                    var div_after = document.createElement("DIV");
                    div_after.id = "lbl" + file_types[i].Value;
                    var br2 = document.createElement("br");

                    //div.appendChild(file_types_codes);
                    div.appendChild(label);
                    div.appendChild(files);
                    div.appendChild(div_after);
                    div.appendChild(br2);
                    fContainer.appendChild(div);


                }


        }

        function setFileType(id) {
            console.log(id);
            var file_id = id.split('_')[1];
            console.log(file_id);
            var val = id.split('_')[2];
            console.log(val);

            var file_types_codes = document.createElement("INPUT");
            file_types_codes.type = "text";
            file_types_codes.name = "FILE_TYPES[]";
            file_types_codes.value = file_id;
            file_types_codes.hidden = true;
            var fContainer = document.getElementById("fContainer");
            fContainer.appendChild(file_types_codes);


            var file_types_text = document.createElement("INPUT");
            file_types_text.type = "text";
            file_types_text.name = "FILE_TYPES_TEXT[]";
            file_types_text.autocomplete = "off";
            file_types_text.placeholder = "@Resources.Settings.ResourceManager.GetString("REMARKS" + "_" + ViewBag.lang)";
            file_types_text.className = "col-md-12 form-control mr-1";


                    if (val == 1) {
                        file_types_text.placeholder = "@Resources.Passes.ResourceManager.GetString("worker_id_card_expaired" + "_" + ViewBag.lang)";
                        file_types_text.className = "col-md-12 form-control mr-1 datepicker_recurring_start";
                        var dateToday = new Date();
                        var yrRange = dateToday.getFullYear() + ":" + (dateToday.getFullYear() + 8);

                        $('body').on('focus', ".datepicker_recurring_start", function () {
                            $(this).datepicker(
                                {
                                dateFormat: "dd/mm/yy",
                                yearRange: yrRange,
                                changeMonth: true,
                                numberOfMonths: 1,
                                changeYear: true,
                            }
                            );
                        });

            }
            var z = "lbl" + file_id;
            var file_div = document.getElementById(z);
            file_div.appendChild(file_types_text);


        }


        //Show The Popup Modal For security caveates
        function SecurityCaveates() {
            //console.log(Id);
            $("#Caveates").modal();

            var image = document.getElementById('caveatesimg').src;
            var caveates = $('#caveates').text();
            console.log(image);
            console.log(caveates);

            $("#cav").text(caveates);

            var div = document.getElementById("dimg");
            var img = document.createElement("IMG");
            div.innerHTML = "";

            if (image != "") {

                img.setAttribute("src", image);
                img.setAttribute("width", "100");
                img.setAttribute("height", "100");
                div.appendChild(img);
            }

        }

    </script>
    <script src="@Url.Content("~/Scripts/JsBarcode.all.js")"></script>
    <script>
        JsBarcode("#barcode3", "@barcode", {
            format: "code39",
            displayValue: false,
            fontSize: 20,
            height: 20,
            width:1

        });
    </script>

}


