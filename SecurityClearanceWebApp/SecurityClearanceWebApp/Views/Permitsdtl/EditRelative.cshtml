@using APP.Util;
@using portal.Controllers;
@using SecurityClearanceWebApp.Models;
@using Newtonsoft.Json;
@model SecurityClearanceWebApp.Models.RA42_MEMBERS_DTL

@{
    ViewBag.Title = "EditRelative";
    string align = "text-right";
    string alignInverse = "text-left";
    string dir = "ltr";
    if (ViewBag.lang == "ar")
    {
        align = "text-left";
        alignInverse = "text-right";
        dir = "rtl";
    }

    //db
    RA42_SECURITY_CLEARANCEEntities db = new RA42_SECURITY_CLEARANCEEntities();

    string barcode = Guid.NewGuid().ToString().Substring(0, 5);
    var no_file_format = Resources.Passes.ResourceManager.GetString("file_format" + "_" + ViewBag.lang);
    var main_z = Resources.Passes.ResourceManager.GetString("main_zone" + "_" + ViewBag.lang);
    var documents = Resources.Passes.ResourceManager.GetString("Documents" + "_" + ViewBag.lang);
    var expired = Resources.Common.ResourceManager.GetString("expired" + "_" + ViewBag.lang);
    var countinue = Resources.Common.ResourceManager.GetString("countinue" + "_" + ViewBag.lang);

    int access = Model.RA42_ACCESS_TYPE_MST.ACCESS_SECRET_CODE.Value;
    ViewData["access"] = access.ToString();
    string permit = ViewData["permit"] as string;
}



<div class="container-fluid" dir="@dir">
    <div class="row">
        @if (ViewBag.RESPO_STATE > 1)
        {
            @Html.Partial("Index")
        }
        <div class="col-md-12">

            <div class="card shadow-sm">

                <div class="card-header text-primary">
                    <h5>
                        <i class="fa fa-edit"></i>
                        @Resources.Common.ResourceManager.GetString("edit" + "_" + ViewBag.lang)
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-12 @align">
                            <a href="#" onclick="history.back()" class="btn btn-outline-dark">
                                <i class="fa fa-backward"></i>
                                @Resources.Passes.ResourceManager.GetString("back" + "_" + ViewBag.lang)
                            </a>
                        </div>
                    </div>
                </div>

                <div class="card-body">
                    @{
                        if (TempData["Success"] != null)
                        {
                            <p class="alert alert-success">@TempData["Success"]</p>
                        }
                        if (TempData["Erorr"] != null)
                        {
                            <p class="alert alert-danger">@TempData["Erorr"]</p>
                        }
                    }
                    @using (Html.BeginForm("EditRelative", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                <div class="row">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.MEMBER_CODE)
                    @Html.HiddenFor(model => model.ACCESS_ROW_CODE)

                    <div class="col-md-12">

                        <div class="form-group">


                            <div class="card ">
                                <div class="card-header">@Resources.Passes.ResourceManager.GetString("Personal_image" + "_" + ViewBag.lang)</div>
                                <div class="row p-4">

                                    <div class="col-2 text-center bg-light p-2">
                                        <img src="~/Files/Profiles/@Model.PERSONAL_IMAGE" onerror="this.onerror = null; this.src='@Url.Content("~/Content/images/adminpic.png")'" alt="user image" width="100" height="100">
                                        @if (Model.PERSONAL_IMAGE != null)
                                        {
                                            <span id="deletImage"><a href="" id="@Model.MEMBER_CODE" class="btn-sm btn-danger"><i class="fa fa-times-circle"></i> </a></span>
                                        }
                                    </div>

                                </div>
                            </div>
                        </div>
                        <br />
                    </div>

                    <div class="col-md-12">
                        <span class="alert-warning p-1 rounded">
                            <b class="text-danger"> * </b>@Resources.Passes.ResourceManager.GetString("required_fields" + "_" + ViewBag.lang)
                        </span>
                        <hr />
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Family_member" + "_" + ViewBag.lang)<b class="text-danger"> * </b>
                            @Html.EditorFor(model => model.FULL_NAME, new { htmlAttributes = new { @class = "form-control",@required="" } })
                            @Html.ValidationMessageFor(model => model.FULL_NAME, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Civil_number" + "_" + ViewBag.lang)<b class="text-danger"> * </b>
                            @Html.EditorFor(model => model.CIVIL_NUMBER, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;",@required="" } })
                            @Html.ValidationMessageFor(model => model.CIVIL_NUMBER, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("passport_number" + "_" + ViewBag.lang)<b class="text-danger"> * </b>
                            @Html.EditorFor(model => model.PASSPORT_NUMBER, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;",@required="" } })
                            @Html.ValidationMessageFor(model => model.PASSPORT_NUMBER, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Phone" + "_" + ViewBag.lang)<b class="text-danger"> * </b>
                            @Html.EditorFor(model => model.PHONE_NUMBER, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;",@required="" } })
                            @Html.ValidationMessageFor(model => model.PHONE_NUMBER, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Identity" + "_" + ViewBag.lang)<b class="text-danger"> * </b>
                            @Html.DropDownList("IDENTITY_CODE", null, htmlAttributes: new { @class = "form-control", id = "IDENTITY", @Style = "width:100%",@required="" })
                            @Html.ValidationMessageFor(model => model.IDENTITY_CODE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">

                            @Resources.Passes.ResourceManager.GetString("Gender" + "_" + ViewBag.lang)<b class="text-danger"> * </b>
                            @Html.DropDownList("GENDER_ID", null, htmlAttributes: new { @class = "form-control", id = "GENDER", @Style = "width:100%",@required="" })
                            @Html.ValidationMessageFor(model => model.GENDER_ID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @{ 
                        var no_relative = new List<string>(){ "12","25"};


}
                    @if (!no_relative.Contains(permit))
                    {
                    <div class="col-md-4">
                        <div class="form-group">

                            @Resources.Passes.ResourceManager.GetString("Relative_type" + "_" + ViewBag.lang)<b class="text-danger"> * </b>
                            @Html.DropDownList("RELATIVE_TYPE_CODE", null, htmlAttributes: new { @class = "form-control", id = "RELATIVETYPECODE", @Style = "width:100%", @required = "" })
                            @Html.ValidationMessageFor(model => model.GENDER_ID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    }
                    <div class="col-md-4">
                        <div class="row">
                            <div class="col-md-11">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Personal_image" + "_" + ViewBag.lang)
                                    <input type="file" name="PERSONAL_IMAGE" accept="image/*" class="form-control" onchange="showpreview(this);" />
                                    @Html.ValidationMessageFor(model => model.PERSONAL_IMAGE, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-1 p-2">
                                <img src="~/Content/images/adminpic.png" style="display: none;" width="50" height="50" id="imagePreview" />
                            </div>
                        </div>

                    </div>
                    <div class="col-md-12">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Remarks" + "_" + ViewBag.lang)
                            @Html.TextAreaFor(model => model.REMARKS, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.REMARKS, "", new { @class = "text-danger" })
                        </div>
                    </div>




                    <div class="col-md-12"><hr /></div>
                    <div class="col-md-6">

                        <div class="col-md-12">
                            <h5 class="alert alert-primary text-center">
                                <i class="fa fa-arrows-alt p-1"></i>  @main_z
                            </h5>
                        </div>

                        <div class="form-group">
                            <div class="col-md-12">
                                <div id="dvContainer"></div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">

                        <div class="col-md-12">
                            <h5 class="alert bg-dark text-white text-center">
                                <i class="fa fa-file-pdf p-1"></i> @documents
                            </h5>
                        </div>


                        <div class="form-group">
                            <div class="col-md-12">
                                <div id="fContainer"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        @foreach (var listZones in ViewBag.GetZones)
                        {
                            <div class="col-md-12">
                                <div class="alert alert-dark  mt-1 btn-block"><i class="fa fa-arrows-alt p-1"></i> @(Language.GetCurrentLang() == "en" ? listZones.RA42_ZONE_AREA_MST.ZONE_NAME_E  : listZones.RA42_ZONE_AREA_MST.ZONE_NAME) <span id="deletzone"><a href="" id="@listZones.ZONE_MASTER_CODE" class="float-left btn-danger btn-sm"><i class="fa fa-trash"></i></a></span></div>
                            </div>
                            <span style="display:none" id="zz_@listZones.ZONE_CODE">@listZones.ZONE_CODE</span>

                        }
                        @if (ViewBag.GetZones.Count == 0)
                        {
                            <div class="col-md-12">
                                <div class="alert alert-danger"><i class="fa fa-exclamation"></i> @Resources.Passes.ResourceManager.GetString("zones_not_complete" + "_" + ViewBag.lang)</div>
                            </div>
                        }
                    </div>

                    <div class="col-lg-6">
                        @{
                            int[] a = new int[100];
                            int x = 0;
                        }
                        @if (ViewBag.GetFiles.Count != 0)
                        {
                            foreach (var listFiles in ViewBag.GetFiles)
                            {
                                if (listFiles.FILE_TYPE != null)
                                {
                                    if (!string.IsNullOrWhiteSpace(listFiles.FILE_TYPE_TEXT))
                                    {
                                        bool check = DateTime.TryParse(listFiles.FILE_TYPE_TEXT, out DateTime dateTime);
                                        if (check == true)
                                        {
                                            var exp = countinue;
                                            var div = "alert-success";
                                            DateTime d = Convert.ToDateTime(listFiles.FILE_TYPE_TEXT);
                                            if (d < DateTime.Now)
                                            {
                                                exp = expired;
                                                div = "alert-danger";
                                            }
                                            <div class="col-md-12">
                                                <div class="alert alert-dark mt-1 btn-block"><i class="fa fa-file-pdf p-1"></i> @(Language.GetCurrentLang() == "en" ? @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE_E: @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE) <span class="@div p-1 rounded">@exp | @listFiles.FILE_TYPE_TEXT </span> <a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-warning btn-sm mr-1" target="_blank"><i class="fa fa-external-link-alt"></i></a><a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-primary details btn-sm mr-1" download><i class="fa fa-download"></i></a> <span id="deletfile"><a href="" id="@listFiles.FILE_CODE" class="float-left btn-danger btn-sm"><i class="fa fa-trash"></i></a></span></div>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="col-md-12">
                                                <div class="alert alert-dark mt-1 btn-block"><i class="fa fa-file-pdf p-1"></i> @(Language.GetCurrentLang() == "en" ? @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE_E: @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE) | <span style="color: #007bff !important;">@listFiles.FILE_TYPE_TEXT</span> <a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-warning btn-sm mr-1" target="_blank"><i class="fa fa-external-link-alt"></i></a><a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-primary details btn-sm mr-1" download><i class="fa fa-download"></i></a> <span id="deletfile"><a href="" id="@listFiles.FILE_CODE" class="float-left btn-danger btn-sm"><i class="fa fa-trash"></i></a></span></div>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <div class="col-md-12">
                                            <div class="alert alert-dark mt-1 btn-block"><i class="fa fa-file-pdf p-1"></i> @(Language.GetCurrentLang() == "en" ? @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE_E: @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE) <a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-warning btn-sm mr-1" target="_blank"><i class="fa fa-external-link-alt"></i></a><a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-primary details btn-sm mr-1" download><i class="fa fa-download"></i></a> <span id="deletfile"><a href="" id="@listFiles.FILE_CODE" class="float-left btn-danger btn-sm"><i class="fa fa-trash"></i></a></span></div>
                                        </div>
                                    }



                                    {
                                        a[x] = listFiles.FILE_TYPE;
                                        x++;
                                    }
                                    <span style="display:none" id="ff_@listFiles.FILE_TYPE">@listFiles.FILE_TYPE</span>

                                }
                            }

                            if (ViewBag.PASS_FILES != ViewBag.GetFiles.Count)
                            {
                                <div class="col-md-12 p-4">
                                    <h5>
                                        <i class="fa fa-file-alt"></i>
                                        @Resources.Passes.ResourceManager.GetString("documents_not_fit" + "_" + ViewBag.lang)
                                    </h5>
                                </div>


                                foreach (var fileType in ViewBag.PASS_FILES_2)
                                {



                                    var json = JsonConvert.SerializeObject(fileType, Formatting.Indented);
                                    var json2 = @"[" + json + "]";
                                    var data = JsonConvert.DeserializeObject<List<dynamic>>(json2);
                                    int k = Convert.ToInt32(data[0].FILE_TYPE_CODE);
                                    if (!a.ToList().Contains(k))
                                    {


                                        <div class="col-md-12">
                                            <div class="btn btn-outline-danger mt-1 btn-block"><i class="fa fa-exclamation-triangle p-1"></i> @(Language.GetCurrentLang() == "en" ? data[0].FILE_TYPE_E : data[0].FILE_TYPE)</div>
                                        </div>



                                    }

                                }
                            }
                        }
                        @if (ViewBag.GetFiles.Count == 0)
                        {
                            <div class="col-md-12">
                                <div class="alert alert-danger"><i class="fa fa-exclamation"></i> @Resources.Passes.ResourceManager.GetString("documents_not_complete" + "_" + ViewBag.lang)</div>
                            </div>
                        }

                    </div>



                    <div class="col-md-12">
                        <hr />
                        <div class="form-group @align">

                            <button type="submit" value="Approve" class="btn btn-success" name="approvebtn">
                                <i class="fa fa-check-circle"></i>
                                @Resources.Common.ResourceManager.GetString("approve" + "_" + ViewBag.lang)
                            </button>

                        </div>


                    </div>
                </div>
                    }
                </div>
            </div>
        </div>
    </div>

</div>








@section Scripts {

    <link href="~/Content/Kendo/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="~/Content/Kendo/styles/kendo.default.min.css" rel="stylesheet" />
    <script src="~/Scripts/Kendo/js/kendo.all.min.js"></script>
    <script>
        $(document).ready(function () {
            AddZones();
            AddFiles();

            $("#IDENTITY").kendoComboBox({
                filter: "contains",
                change: function (e) {
                    var widget = e.sender;

                    if (widget.value() && widget.select() === -1) {
                        //custom has been selected
                        widget.value(""); //reset widget
                        //widget.trigger("change");
                    }
                }
            });
            $("#GENDER").kendoComboBox({
                filter: "contains",
                change: function (e) {
                    var widget = e.sender;

                    if (widget.value() && widget.select() === -1) {
                        //custom has been selected
                        widget.value(""); //reset widget
                        //widget.trigger("change");
                    }
                }
            });
            $("#RELATIVETYPECODE").kendoComboBox({
                filter: "contains",
                change: function (e) {
                    var widget = e.sender;

                    if (widget.value() && widget.select() === -1) {
                        //custom has been selected
                        widget.value(""); //reset widget
                        //widget.trigger("change");
                    }
                }
            });

          
             $('#deletImage a').click(function (e) {
            e.preventDefault();

            var id = $(this).attr("Id");

            var MSG = confirm("@Resources.Passes.ResourceManager.GetString("File_confirm_delete" + "_" + ViewBag.lang)");

            if (MSG) {

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DeleteRelativeImage")',
                    data: { id: id },
                    dataType: "json",
                    success: function () {
                        setTimeout(function () { location.reload(); }, 1);
                    },
                    error: function () {
                        alert("@Resources.Passes.ResourceManager.GetString("Error_delete_file" + "_" + ViewBag.lang)");
                    }
                });
            }
            })

             $('#deletfile a').click(function (e) {
                e.preventDefault();

                var id = $(this).attr("Id");

                var MSG = confirm("@Resources.Passes.ResourceManager.GetString("File_confirm_delete" + "_" + ViewBag.lang)");

                if (MSG) {

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("DeleteFile")',
                        data: { id: id },
                        dataType: "json",
                        success: function () {
                            setTimeout(function () { location.reload(); }, 1);
                        },
                        error: function () {
                            alert("@Resources.Passes.ResourceManager.GetString("Error_delete_file" + "_" + ViewBag.lang)");
                        }
                    });
                }
            })

            $('#deletzone a').click(function (e) {
                e.preventDefault();

                var id = $(this).attr("Id");

                var MSG = confirm("@Resources.Passes.ResourceManager.GetString("Area_confirm_delete" + "_" + ViewBag.lang)");

                if (MSG) {

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("DeleteZone")',
                        data: { id: id },
                        dataType: "json",
                        success: function () {
                            setTimeout(function () { location.reload(); }, 1);
                        },
                        error: function () {
                            alert("@Resources.Passes.ResourceManager.GetString("Error_delete_area" + "_" + ViewBag.lang)");
                        }
                    });
                }
            })
        });

          function showpreview(input) {

            if (input.files && input.files[0]) {

                var val = $(input).val().toLowerCase(),
                    regex = new RegExp("(.*?)\.(gif|jpg|jpeg|JPEG|GIF|JPG)$");

                if (!(regex.test(val))) {
                    $(input).val('');
                    $('#imagePreview').css('display', 'none');

                    alert('@no_file_format');

                }
                else {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#imagePreview').css('display', 'inline');
                        $('#imagePreview').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }
        }

          function AddZones() {


                var zones = JSON.parse('@Html.Raw(Json.Encode(ViewBag.ZONE_CODE))');

                var dvContainer = document.getElementById("dvContainer");
                var div = document.createElement("DIV");
                div.className = "bg-light rounded";
                //Add data
                for (var i = 0; i < zones.length; i++) {
                    var z_id = "#zz_" + zones[i].Value;
                    var zz = $(z_id).text();
                    console.log(zz);
                    if (zz != zones[i].Value) {
                    var ddlZones = document.createElement("INPUT");
                    ddlZones.type = "checkbox"
                    ddlZones.name = "ZONE[]"
                    ddlZones.className = "m-2";
                    ddlZones.id = "zone" + i;
                    ddlZones.value = zones[i].Value;

                    var Sub_ddlZones = document.createElement("INPUT");
                    Sub_ddlZones.type = "text"
                    Sub_ddlZones.name = "SUB_ZONE[]"
                    Sub_ddlZones.value = 0;
                    Sub_ddlZones.hidden = true;

                    var label = document.createElement("label");
                    //Set zone Name in Text part.
                    label.htmlFor = "zone" + i;
                    label.appendChild(document.createTextNode(zones[i].Text));
                    //Set value in Value part.
                    //Add to DIV.

                    var br2 = document.createElement("br");

                    div.appendChild(ddlZones);
                    div.appendChild(label);
                    div.appendChild(Sub_ddlZones);
                    div.appendChild(br2);
                    dvContainer.appendChild(div);
                }

                }


            }



       function AddFiles() {
            //Build an array containing Customer records.


                var file_types = JSON.parse('@Html.Raw(Json.Encode(ViewBag.FILE_TYPES))');



                //Reference the container DIV.
                var fContainer = document.getElementById("fContainer")
                //Add  to DIV.
                var div = document.createElement("DIV");
                div.className = "bg-light p-2 rounded";
                div.id = "file_div";




                //Add the Options to the DropDownList.
                for (var i = 0; i < file_types.length; i++) {
                    //Create  element.
                    var f_id = "#ff_" + file_types[i].Value;
                    var ff = $(f_id).text();
                    console.log(ff);
                    if (ff != file_types[i].Value) {
                        var val = file_types[i].Text.split(/-(.*)/)[1];
                        console.log(val);
                        var val2 = file_types[i].Text.replace(/\-.*/g, "$'");



                        var files = document.createElement("INPUT");
                        files.name = "files";
                        files.type = "file";
                        files.id = "file_" + file_types[i].Value + "_" + val;
                        files.className = "form-control m-1";
                        files.onchange = function () { setFileType(this.id); };


                        var label = document.createElement("label");
                        //Set file Name in Text part.
                        label.htmlFor = "file_types_text" + i;
                        label.appendChild(document.createTextNode(val2));

                        var div_after = document.createElement("DIV");
                        div_after.id = "lbl" + file_types[i].Value;
                        var br2 = document.createElement("br");

                        //div.appendChild(file_types_codes);
                        div.appendChild(label);
                        div.appendChild(files);
                        div.appendChild(div_after);
                        div.appendChild(br2);
                        fContainer.appendChild(div);

                    }
                }


        }

        function setFileType(id) {
            console.log(id);
            var file_id = id.split('_')[1];
            console.log(file_id);
            var val = id.split('_')[2];
            console.log(val);

            var file_types_codes = document.createElement("INPUT");
            file_types_codes.type = "text";
            file_types_codes.name = "FILE_TYPES[]";
            file_types_codes.value = file_id;
            file_types_codes.hidden = true;
            var fContainer = document.getElementById("fContainer");
            fContainer.appendChild(file_types_codes);


            var file_types_text = document.createElement("INPUT");
            file_types_text.type = "text";
            file_types_text.name = "FILE_TYPES_TEXT[]";
            file_types_text.autocomplete = "off";
            file_types_text.placeholder = "@Resources.Settings.ResourceManager.GetString("REMARKS" + "_" + ViewBag.lang)";
            file_types_text.className = "col-md-12 form-control mr-1";


                    if (val == 1) {
                        file_types_text.placeholder = "@Resources.Passes.ResourceManager.GetString("worker_id_card_expaired" + "_" + ViewBag.lang)";
                        file_types_text.className = "col-md-12 form-control mr-1 datepicker_recurring_start";
                        var dateToday = new Date();
                        var yrRange = dateToday.getFullYear() + ":" + (dateToday.getFullYear() + 8);

                        $('body').on('focus', ".datepicker_recurring_start", function () {
                            $(this).datepicker(
                                {
                                dateFormat: "dd/mm/yy",
                                yearRange: yrRange,
                                changeMonth: true,
                                numberOfMonths: 1,
                                changeYear: true,
                            }
                            );
                        });

            }
            var z = "lbl" + file_id;
            var file_div = document.getElementById(z);
            file_div.appendChild(file_types_text);


        }
    </script>


}
