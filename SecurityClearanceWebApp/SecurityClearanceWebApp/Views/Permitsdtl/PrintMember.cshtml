@using Newtonsoft.Json;
@using portal.Controllers;
@using SecurityClearanceWebApp.Models;
@using APP.Util;
@using System;
@using System.Text.RegularExpressions;
@model SecurityClearanceWebApp.Models.RA42_PERMITS_DTL

@{
    ViewBag.Title = "PrintMember";
    string align = "text-right";
    string alignInverse = "text-left";
    string dir = "ltr";
    if (ViewBag.lang == "ar")
    {
        align = "text-left";
        alignInverse = "text-right";
        dir = "rtl";
    }

    var agree = Resources.Common.ResourceManager.GetString("error_agree" + "_" + ViewBag.lang);
    var main_z = Resources.Passes.ResourceManager.GetString("main_zone" + "_" + ViewBag.lang);
    var sub_z = Resources.Passes.ResourceManager.GetString("sub_zone" + "_" + ViewBag.lang);
    var remove = Resources.Passes.ResourceManager.GetString("Remove" + "_" + ViewBag.lang);
    var all = Resources.Passes.ResourceManager.GetString("All" + "_" + ViewBag.lang);
    var choose_sub_z = Resources.Passes.ResourceManager.GetString("choose_sub_zone_again" + "_" + ViewBag.lang);
    var no_file_ = Resources.Passes.ResourceManager.GetString("not_allowed_m_ten" + "_" + ViewBag.lang);
    var no_zone_ = Resources.Passes.ResourceManager.GetString("not_allowed_m_50" + "_" + ViewBag.lang);
    var no_file_format = Resources.Passes.ResourceManager.GetString("file_format" + "_" + ViewBag.lang);
    var doc = Resources.Passes.ResourceManager.GetString("document_type" + "_" + ViewBag.lang);
    var no_persons = Resources.Passes.ResourceManager.GetString("Not_allowed_50_person" + "_" + ViewBag.lang);
    var relative = Resources.Passes.ResourceManager.GetString("Relative_type" + "_" + ViewBag.lang);
    var civil_num = Resources.Passes.ResourceManager.GetString("Civil_number" + "_" + ViewBag.lang);
    var identity = Resources.Passes.ResourceManager.GetString("Identity" + "_" + ViewBag.lang);
    var gender = Resources.Passes.ResourceManager.GetString("Gender" + "_" + ViewBag.lang);
    var documents = Resources.Passes.ResourceManager.GetString("Documents" + "_" + ViewBag.lang);
    var expired = Resources.Common.ResourceManager.GetString("expired" + "_" + ViewBag.lang);
    var countinue = Resources.Common.ResourceManager.GetString("countinue" + "_" + ViewBag.lang);
    var required = Resources.Common.ResourceManager.GetString("required" + "_" + ViewBag.lang);

    var controller = "Mypasses";
    List<string> employees = new List<string> { "7","8","9","15","16","21","23","27","30",
 "35","36","37","42","43","44"};

    List<string> others = new List<string> { "17","18","19","20","22","26","28","31","32",
 "33","34","38","39","40","41","45","50","51"};

    List<string> nonEmployeeFamilies = new List<string> { "50", "51" };
    List<string> EmployeeFamilies = new List<string> { "30", "23" };
    List<string> RnoVistors = new List<string> { "11", "12", "13", "14", "16" };
    List<string> With_Without_car = new List<string> { "7", "39", "40", "41" };
    List<string> noZones = new List<string> { "1", "10" };
    List<string> non_family_access = new List<string> { "1", "2", "3", "5", "6", "7", "8", "9", "10" };
    List<int> not_main_workflow = new List<int> { 8, 9 };

    int access = Model.RA42_ACCESS_TYPE_MST.ACCESS_SECRET_CODE.Value;
    string permit = Model.RA42_CARD_FOR_MST.CARD_SECRET_CODE;

    ViewData["access"] = access.ToString();

    string barcode = Guid.NewGuid().ToString().Substring(0, 5);

}



<div class="container-fluid" dir="@dir">
    <div class="row">
        @if (ViewBag.RESPO_STATE > 3 || ViewBag.ADMIN == true || ViewBag.DEVELOPER == true)
        {
            @Html.Partial("Index")
            controller = ViewBag.controllerName;
        }
        <div class="col-md-12">
            @if (ViewBag.RESPO_STATE > 1)
            {
                <div class="page-path">
                    <a href="@Url.Action("Details", "Permitsdtl", new { id = Model.PERMIT_CODE, tab = @ViewBag.activetab })">
                        <i class="fa fa-eye"></i>
                        @Resources.Common.ResourceManager.GetString("details" + "_" + ViewBag.lang)
                    </a>
                    <span>/</span>
                    <a href="@Url.Action("Delete", "Permitsdtl", new { id = Model.PERMIT_CODE, tab = @ViewBag.activetab })">
                        <i class="fa fa-trash"></i>
                        @Resources.Common.ResourceManager.GetString("delete" + "_" + ViewBag.lang)
                    </a>
                    <span>/</span>
                    <a href="@Url.Action("Comments", "Permitsdtl", new { id = Model.PERMIT_CODE, tab = @ViewBag.activetab })">
                        <i class="fa fa-comment"></i>
                        @Resources.Passes.ResourceManager.GetString("Comments" + "_" + ViewBag.lang)
                    </a>
                    <span>/</span>
                    <a>
                        <i class="fa fa-edit"></i>
                        @Resources.Common.ResourceManager.GetString("edit" + "_" + ViewBag.lang)
                    </a>
                </div>
            }
        <div class="card shadow-sm">

            <div class="card-header text-primary">
                <h5>
                    <i class="fa fa-edit"></i>
                    @Resources.Common.ResourceManager.GetString("edit" + "_" + ViewBag.lang)
                </h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-9 text-primary">
                        <h4>
                            <i class="@Model.RA42_ACCESS_TYPE_MST.ICON"></i>&nbsp;
                            @(Language.GetCurrentLang()=="en"?Model.RA42_CARD_FOR_MST.CARD_FOR_E: Model.RA42_CARD_FOR_MST.CARD_FOR_A)
                        </h4>
                    </div>
                  
                    <div class="col-md-10"></div>

                </div>
            </div>

            <div class="card-body">
                @{
                    if (TempData["Success"] != null)
                    {
                        <p class="alert alert-success">@TempData["Success"]</p>
                    }
                    if (TempData["Erorr"] != null)
                    {
                        <p class="alert alert-danger">@TempData["Erorr"]</p>
                    }
                }

                <div class="col-md-12">
                    <div class="alert alert-warning"><i class="fa fa-exclamation-triangle"></i> @Resources.Passes.ResourceManager.GetString("for_family_members" + "_" + ViewBag.lang)</div>
                </div>
                @using (Html.BeginForm("PrintMember", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

            <div class="row">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.PERMIT_CODE)
                @Html.HiddenFor(model => model.WORKFLOW_RESPO_CODE)
                <input type="hidden" value="@Model.PERMIT_CODE" name="FAMILY_ID" />
                <input type="hidden" name="MEMBER_CODE" value="@ViewBag.MEMBER_CODE" />
                <div class="col-md-12">

                    <div class="form-group">

                        @{
                            var image1 = "";
                            var kafeel = Resources.Passes.ResourceManager.GetString("Pass_owner" + "_" + ViewBag.lang);

                            var image2 = "http://mamrafowebgov01/images/" + Model.SERVICE_NUMBER + ".gif";
                            if (Model.PERSONAL_IMAGE != null)
                            {
                                kafeel = Resources.Passes.ResourceManager.GetString("Pass_responsible" + "_" + ViewBag.lang);
                                image1 = "~/Files/Profiles/" + ViewBag.PERSONAL_IMAGE;
                            }


                        }

                        <div class="card ">
                            <div class="card-header">@Resources.Passes.ResourceManager.GetString("Personal_image" + "_" + ViewBag.lang)</div>
                            <div class="row p-4">
                                <div class="col-2 text-center bg-light p-2">
                                    <div class="card-title text-center">@kafeel </div>
                                    <img src="@image2" onerror="this.onerror = null; this.src='@Url.Content("~/Content/images/adminpic.png")'" alt="user image" width="100" height="100">
                                </div>
                                @if (image1 != "")
                                {
                                    <div class="col-2 text-center bg-light p-2">
                                        <div class="card-title text-center">@Resources.Passes.ResourceManager.GetString("Pass_owner" + "_" + ViewBag.lang)</div>
                                        <img src="@Url.Content(image1)" onerror="this.onerror = null; this.src='@Url.Content("~/Content/images/adminpic.png")'" alt="user image" width="100" height="100" />
                                        <span id="deletImage"><a href="" id="@Model.PERMIT_CODE" class="btn-sm btn-danger"><i class="fa fa-times-circle"></i> </a></span>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <br />
                </div>



                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header">
                            @Resources.Passes.ResourceManager.GetString("Host_details" + "_" + ViewBag.lang)
                        </div>
                        <div class="row p-2">
                            <div class="col-md-12">


                                <input type="text" value="@Model.SERVICE_NUMBER" name="SERVICE_NUMBER" class="service-number-field form-control" readonly />
                                <br />
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Name_a" + "_" + ViewBag.lang)

                                    @Html.EditorFor(model => model.HOST_NAME_A, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.HOST_NAME_A, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Name_e" + "_" + ViewBag.lang)

                                    @Html.EditorFor(model => model.HOST_NAME_E, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.HOST_NAME_E, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Rank_a" + "_" + ViewBag.lang)

                                    @Html.EditorFor(model => model.HOST_RANK_A, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.HOST_RANK_A, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Rank_e" + "_" + ViewBag.lang)

                                    @Html.EditorFor(model => model.HOST_RANK_E, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.HOST_RANK_E, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Proffision_a" + "_" + ViewBag.lang)

                                    @Html.EditorFor(model => model.PROFESSION_A, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PROFESSION_A, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Proffision_e" + "_" + ViewBag.lang)

                                    @Html.EditorFor(model => model.PROFESSION_E, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PROFESSION_E, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Unit_a" + "_" + ViewBag.lang)

                                    @Html.EditorFor(model => model.UNIT_A, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UNIT_A, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Unit_e" + "_" + ViewBag.lang)

                                    @Html.EditorFor(model => model.UNIT_E, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UNIT_E, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Phone_number" + "_" + ViewBag.lang)

                                    @Html.EditorFor(model => model.PHONE_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PHONE_NUMBER, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Gsm" + "_" + ViewBag.lang)

                                    @Html.EditorFor(model => model.GSM, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.GSM, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="col-md-12">
                    <br />
                    <div class="card">
                        <div class="card-header">
                            @Resources.Passes.ResourceManager.GetString("Guest_details" + "_" + ViewBag.lang)
                        </div>
                        <div class="row p-2">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Pass_type" + "_" + ViewBag.lang)

                                    @Html.DropDownList("PASS_TYPE_CODE", null, htmlAttributes: new { @class = "form-control", id = "PASSTYPECODE", @Style = "width:100%" })
                                    @Html.ValidationMessageFor(model => model.PASS_TYPE_CODE, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="row">
                                    <div class="col-md-11">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Personal_image" + "_" + ViewBag.lang)
                                            <input type="file" name="PERSONAL_IMAGE" accept="image/*" class="form-control" onchange="showpreview(this);" />
                                            @Html.ValidationMessageFor(model => model.PERSONAL_IMAGE, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-1 p-2">
                                        <img src="~/Content/images/adminpic.png" style="display: none;" width="50" height="50" id="imagePreview" />
                                    </div>
                                </div>

                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Civil_number" + "_" + ViewBag.lang)

                                    @Html.EditorFor(model => model.CIVIL_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CIVIL_NUMBER, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Guest_name_inar" + "_" + ViewBag.lang)

                                    @Html.EditorFor(model => model.NAME_A, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NAME_A, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Guest_name_inen" + "_" + ViewBag.lang)

                                    @Html.EditorFor(model => model.NAME_E, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NAME_E, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Identity" + "_" + ViewBag.lang)

                                    @Html.DropDownList("IDENTITY_CODE", null, htmlAttributes: new { @class = "form-control", id = "IDENTITY", @Style = "width:100%" })
                                    @Html.ValidationMessageFor(model => model.IDENTITY_CODE, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Gender" + "_" + ViewBag.lang)

                                    @Html.DropDownList("GENDER_ID", null, htmlAttributes: new { @class = "form-control", id = "GENDER", @Style = "width:100%" })
                                    @Html.ValidationMessageFor(model => model.GENDER_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Relative_type" + "_" + ViewBag.lang)

                                    @Html.DropDownList("RELATIVE_TYPE_CODE", null, htmlAttributes: new { @class = "form-control", id = "RELATIVE", @Style = "width:100%" })
                                    @Html.ValidationMessageFor(model => model.RELATIVE_TYPE_CODE, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Building_num" + "_" + ViewBag.lang)

                                    @Html.EditorFor(model => model.BUILDING_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BUILDING_NUMBER, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

                @{
                    var display = "none";
                    var val = "no";

                    bool checkOption = false;


                    if (Model.VECHILE_CODE != null)
                    {
                        <div>
                            @{
                                val = "yes";
                                display = "block";
                                checkOption = true;
                            }
                        </div>
                    }

                    if (RnoVistors.Contains(permit) || With_Without_car.Contains(permit))
                    {
                        <div class="col-md-12">
                            <hr />
                            <h5 id="confirm_car" class="text-danger"><input type="checkbox" checked="@checkOption" name="with_car" id="yes_car" /> @Resources.Passes.ResourceManager.GetString("with_car" + "_" + ViewBag.lang)</h5>
                        </div>
                    }
                    <input type="hidden" value="@val" name="is_with_car" id="is_with_car" />
                    <div class="col-md-12">
                        <div id="car_option" style="display:@display;">
                            <div class="card">
                                <div class="card-header">@Resources.Passes.ResourceManager.GetString("car_details" + "_" + ViewBag.lang)</div>
                                <div class="card-body">
                                    <div class="col-md-12">
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    @Resources.Passes.ResourceManager.GetString("Vechile_cat" + "_" + ViewBag.lang)

                                                    <select id="catigory" class="form-control" name="VECHILE_CODE" style="width:100%;">

                                                        @if (Model != null && Model.VECHILE_CODE != null)
                                                        {
                                                            <option selected value="@Model.VECHILE_CODE">@Html.DisplayFor(model => model.RA42_VECHILE_CATIGORY_MST.VECHILE_CAT)</option>
                                                            foreach (var cat in ViewBag.VECHILE_CODE)
                                                            {
                                                                <option value="@cat.Value">@cat.Text</option>

                                                            }
                                                        }
                                                        else
                                                        {
                                                            foreach (var cat in ViewBag.VECHILE_CODE)
                                                            {
                                                                <option value="@cat.Value">@cat.Text</option>

                                                            }
                                                        }
                                                    </select>
                                                </div>

                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    @Resources.Passes.ResourceManager.GetString("Vechile_name" + "_" + ViewBag.lang)

                                                    <select id="car" class="form-control" name="VECHILE_NAME_CODE">
                                                        @if (Model != null && Model.VECHILE_NAME_CODE != null)
                                                        {
                                                            <option value="@Model.VECHILE_NAME_CODE">@Html.DisplayFor(model => model.RA42_VECHILE_NAME_MST.VECHILE_NAME)</option>
                                                        }
                                                        else
                                                        {

                                                        }
                                                    </select>
                                                    @Html.ValidationMessageFor(model => model.VECHILE_NAME_CODE,
                                                           "", new { @class = "text-danger" })
                                                </div>
                                            </div>


                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    @Resources.Passes.ResourceManager.GetString("Plate_type" + "_" + ViewBag.lang)

                                                    @Html.DropDownList("PLATE_CODE", null, htmlAttributes: new { @class = "form-control", id = "PLATECODE", @Style = "width:100%" })
                                                    @Html.ValidationMessageFor(model => model.PLATE_CODE, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    @Resources.Passes.ResourceManager.GetString("Plate_number" + "_" + ViewBag.lang)

                                                    @Html.EditorFor(model => model.PLATE_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.PLATE_NUMBER, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    @Resources.Passes.ResourceManager.GetString("Plate_char" + "_" + ViewBag.lang)

                                                    @Html.DropDownList("PLATE_CHAR_CODE", null, htmlAttributes: new { @class = "form-control", id = "PLATECHARCODE", @Style = "width:100%" })
                                                    @Html.ValidationMessageFor(model => model.PLATE_CHAR_CODE, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    @Resources.Passes.ResourceManager.GetString("Vechile_color" + "_" + ViewBag.lang)

                                                    @Html.DropDownList("VECHILE_COLOR_CODE", null, htmlAttributes: new { @class = "form-control", id = "CARCOLOR", @Style = "width:100%" })
                                                    @Html.ValidationMessageFor(model => model.VECHILE_COLOR_CODE, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }


                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header">
                            @Resources.Passes.ResourceManager.GetString("Car_property" + "_" + ViewBag.lang)
                        </div>
                        <div class="row p-2">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Property_issued" + "_" + ViewBag.lang)

                                    @Html.EditorFor(model => model.DATE_FROM, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;", onkeydown = "javascript: return false;" } })
                                    @Html.ValidationMessageFor(model => model.DATE_FROM, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Property_expired" + "_" + ViewBag.lang)

                                    @Html.EditorFor(model => model.DATE_TO, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;", onkeydown = "javascript: return false;" } })
                                    @Html.ValidationMessageFor(model => model.DATE_TO, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>




                <div class="col-md-12">
                    <br />
                    <div class="form-group">
                        @Resources.Passes.ResourceManager.GetString("PURPOSE_OF_PASS" + "_" + ViewBag.lang)
                        @Html.TextAreaFor(model => model.PURPOSE_OF_PASS, new { @class = "form-control", })
                        @Html.ValidationMessageFor(model => model.PURPOSE_OF_PASS, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <br />
                    <div class="form-group">
                        @Resources.Passes.ResourceManager.GetString("Remarks" + "_" + ViewBag.lang)
                        @Html.TextAreaFor(model => model.REMARKS, new { @class = "form-control", @ReadOnly = true })
                        @Html.ValidationMessageFor(model => model.REMARKS, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-12"><hr /></div>
                <br />



                @if (!noZones.Contains(access.ToString()))
                {
                    <div class="col-md-6">

                        <div class="col-md-12">
                            <h5 class="alert alert-primary text-center">
                                <i class="fa fa-arrows-alt p-1"></i>  @main_z
                            </h5>
                        </div>

                        <div class="form-group">
                            <div class="col-md-12">
                                <div id="dvContainer"></div>
                            </div>
                        </div>
                    </div>
                }
                <div class="col-md-6">

                    <div class="col-md-12">
                        <h5 class="alert bg-dark text-white text-center">
                            <i class="fa fa-file-pdf p-1"></i> @documents
                        </h5>
                    </div>


                    <div class="form-group">
                        <div class="col-md-12">
                            <div id="fContainer"></div>
                        </div>
                    </div>
                </div>
                @if (!noZones.Contains(access.ToString()))
                {
                    <div class="col-lg-6">
                        @foreach (var listZones in ViewBag.GetZones)
                        {
                            <div class="col-md-12">
                                <div class="alert alert-dark  mt-1 btn-block"><i class="fa fa-arrows-alt p-1"></i> @(Language.GetCurrentLang() == "en" ? listZones.RA42_ZONE_AREA_MST.ZONE_NAME_E + Model.getZoneName(listZones.ZONE_SUB_CODE) : listZones.RA42_ZONE_AREA_MST.ZONE_NAME +  Model.getZoneName(listZones.ZONE_SUB_CODE)) <span id="deletzone"><a href="" id="@listZones.ZONE_MASTER_CODE" class="float-left btn-danger btn-sm"><i class="fa fa-trash"></i></a></span></div>
                            </div>
                            <span style="display:none" id="zz_@listZones.ZONE_CODE">@listZones.ZONE_CODE</span>

                        }
                        @if (ViewBag.GetZones.Count == 0)
                        {
                            <div class="col-md-12">
                                <div class="alert alert-danger"><i class="fa fa-exclamation"></i> @Resources.Passes.ResourceManager.GetString("zones_not_complete" + "_" + ViewBag.lang)</div>
                            </div>
                        }
                    </div>
                }

                <div class="col-lg-6">
                    @{
                        int[] a = new int[100];
                        int x = 0;

                    }
                    @if (ViewBag.GetFiles.Count != 0)
                    {
                        foreach (var listFiles in ViewBag.GetFiles)
                        {

                            if (listFiles.FILE_TYPE != null)
                            {
                                if (!string.IsNullOrWhiteSpace(listFiles.FILE_TYPE_TEXT))
                                {
                                    bool check = DateTime.TryParse(listFiles.FILE_TYPE_TEXT, out DateTime dateTime);
                                    if (check == true)
                                    {
                                        var exp = countinue;
                                        var div = "alert-success";
                                        DateTime d = Convert.ToDateTime(listFiles.FILE_TYPE_TEXT);
                                        if (d < DateTime.Now)
                                        {
                                            exp = expired;
                                            div = "alert-danger";
                                        }
                                        <div class="col-md-12">
                                            <div class="alert alert-dark mt-1 btn-block"><i class="fa fa-file-pdf p-1"></i> @(Language.GetCurrentLang() == "en" ? @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE_E: @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE) <span class="@div p-1 rounded">@exp | @listFiles.FILE_TYPE_TEXT </span> <a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-warning btn-sm mr-1" target="_blank"><i class="fa fa-external-link-alt"></i></a><a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-primary details btn-sm mr-1" download><i class="fa fa-download"></i></a> <span id="deletfile"><a href="" id="@listFiles.FILE_CODE" class="float-left btn-danger btn-sm"><i class="fa fa-trash"></i></a></span></div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col-md-12">
                                            <div class="alert alert-dark mt-1 btn-block"><i class="fa fa-file-pdf p-1"></i> @(Language.GetCurrentLang() == "en" ? @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE_E: @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE) | <span style="color: #007bff !important;">@listFiles.FILE_TYPE_TEXT</span> <a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-warning btn-sm mr-1" target="_blank"><i class="fa fa-external-link-alt"></i></a><a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-primary details btn-sm mr-1" download><i class="fa fa-download"></i></a> <span id="deletfile"><a href="" id="@listFiles.FILE_CODE" class="float-left btn-danger btn-sm"><i class="fa fa-trash"></i></a></span></div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="col-md-12">
                                        <div class="alert alert-dark mt-1 btn-block"><i class="fa fa-file-pdf p-1"></i> @(Language.GetCurrentLang() == "en" ? @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE_E: @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE) <a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-warning btn-sm mr-1" target="_blank"><i class="fa fa-external-link-alt"></i></a><a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-primary details btn-sm mr-1" download><i class="fa fa-download"></i></a> <span id="deletfile"><a href="" id="@listFiles.FILE_CODE" class="float-left btn-danger btn-sm"><i class="fa fa-trash"></i></a></span></div>
                                    </div>
                                }



                                {
                                    a[x] = listFiles.FILE_TYPE;
                                    x++;
                                }
                                <span style="display:none" id="ff_@listFiles.FILE_TYPE">@listFiles.FILE_TYPE</span>

                            }
                        }

                        if (ViewBag.PASS_FILES != ViewBag.GetFiles.Count)
                        {
                            <div class="col-md-12 p-4">
                                <h5>
                                    <i class="fa fa-file-alt"></i>
                                    @Resources.Passes.ResourceManager.GetString("documents_not_fit" + "_" + ViewBag.lang)
                                </h5>
                            </div>


                            foreach (var fileType in ViewBag.PASS_FILES_2)
                            {



                                var json = JsonConvert.SerializeObject(fileType, Formatting.Indented);
                                var json2 = @"[" + json + "]";
                                var data = JsonConvert.DeserializeObject<List<dynamic>>(json2);
                                int k = Convert.ToInt32(data[0].FILE_TYPE_CODE);
                                if (!a.ToList().Contains(k))
                                {


                                    <div class="col-md-12">
                                        <div class="btn btn-outline-danger mt-1 btn-block"><i class="fa fa-exclamation-triangle p-1"></i> @(Language.GetCurrentLang() == "en" ? data[0].FILE_TYPE_E : data[0].FILE_TYPE)</div>
                                    </div>



                                }

                            }
                        }
                    }
                    @if (ViewBag.GetFiles.Count == 0)
                    {
                        <div class="col-md-12">
                            <div class="alert alert-danger"><i class="fa fa-exclamation"></i> @Resources.Passes.ResourceManager.GetString("documents_not_complete" + "_" + ViewBag.lang)</div>
                        </div>
                    }

                </div>





                <div class="col-12"><hr /></div>



                <div class="col-md-4">
                    <div class="form-group">
                        @Resources.Passes.ResourceManager.GetString("Barcod" + "_" + ViewBag.lang)

                        <input class="form-control text-box single-line"
                               value="@barcode"
                               name="BARCODE" type="hidden" readonly />
                        <br />

                        <img id="barcode3" />
                        @Html.ValidationMessageFor(model => model.BARCODE, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-12"><hr /></div>






                <div class="col-md-12">
                    <h4>
                        @Resources.Passes.ResourceManager.GetString("Comments" + "_" + ViewBag.lang)
                    </h4>

                    <div class="form-group">
                        <label class="control-label">
                            @Resources.Passes.ResourceManager.GetString("Add_comment" + "_" + ViewBag.lang)
                        </label>
                        <textarea name="COMMENT" class="form-control"></textarea>
                    </div>
                </div>








                <div class="col-md-12">

                    <div class="form-group @align">

                        <button type="submit" value="Approve" class="btn btn-success" name="approvebtn">
                            <i class="fa fa-check-circle"></i>
                            @Resources.Common.ResourceManager.GetString("approve" + "_" + ViewBag.lang)
                        </button>

                    </div>

                </div>
            </div>
                }
            </div>
        </div>
        </div>
    </div>

</div>








@section Scripts {
    <link href="~/Content/select2.min.css" rel="stylesheet" />
    <script src="~/Scripts/select2.min.js"></script>
    <link href="~/Content/Kendo/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="~/Content/Kendo/styles/kendo.default.min.css" rel="stylesheet" />
    <script src="~/Scripts/Kendo/js/kendo.all.min.js"></script>
    <script>
        $(document).ready(function () {
            showProgressBar($(".service-number-field"));
        showServiceInfo($(".service-number-field"));
         // Apply Kendo Validator to the form
         $("#myForm").kendoValidator({
            messages: {
                 required: "@required"
             }
         }).data("kendoValidator");
        try {
            AddFiles();
            AddZones();
        } catch {
            console.log("add files and zones passed successfully!");
        }

            var today = new Date();
            var oneYearFromToday = new Date(today.getFullYear() + 1, today.getMonth(), today.getDate());
            var node = document.getElementById("rnoVisitors");
            var node1 = document.getElementById("rafopermits");
            var checkrno = node.textContent;
            var checkrafo = node1.textContent;
            if (checkrno.trim() === 'yes') {
                oneYearFromToday = new Date(today);
                oneYearFromToday.setDate(today.getDate() + 10);
            }
            if (checkrafo.trim() === 'yes') {
                oneYearFromToday = new Date(today.getFullYear() + 2, today.getMonth(), today.getDate());
            }
            var from = $("#DATE_FROM").kendoDatePicker({
                min: today,
                change: fromChange,
                format: "dd/MM/yyyy"

            }).data("kendoDatePicker");

            var to = $("#DATE_TO").kendoDatePicker({
                max: oneYearFromToday,
                change: toChange,
                format: "dd/MM/yyyy"

            }).data("kendoDatePicker");

            from.max(to.value());
            to.min(from.value());

            function fromChange() {
                var fromDate = from.value(),
                    toDate = to.value();

                if (fromDate) {
                    fromDate = new Date(fromDate);
                    fromDate.setDate(fromDate.getDate());
                    to.min(fromDate);
                } else if (toDate) {
                    from.max(new Date(toDate));
                } else {
                    to.min(new Date());
                    from.max(new Date());
                }
            }

            function toChange() {
                var fromDate = from.value(),
                    toDate = to.value();

                if (toDate) {
                    toDate = new Date(toDate);
                    toDate.setDate(toDate.getDate());
                    from.max(toDate);
                } else if (fromDate) {
                    to.min(new Date(fromDate));
                } else {
                    to.min(new Date());
                    from.max(new Date());
                }
            }


            $("#IDENTITY").kendoComboBox({
                filter: "contains",
                change: function (e) {
                    var widget = e.sender;

                    if (widget.value() && widget.select() === -1) {
                        //custom has been selected
                        widget.value(""); //reset widget
                        //widget.trigger("change");
                    }
                }
            });

            $("#GENDER").kendoComboBox({
                filter: "contains",
                change: function (e) {
                    var widget = e.sender;

                    if (widget.value() && widget.select() === -1) {
                        //custom has been selected
                        widget.value(""); //reset widget
                        //widget.trigger("change");
                    }
                }
            });
            $("#RELATIVE").kendoComboBox({
                filter: "contains",
                change: function (e) {
                    var widget = e.sender;

                    if (widget.value() && widget.select() === -1) {
                        //custom has been selected
                        widget.value(""); //reset widget
                        //widget.trigger("change");
                    }
                }
            });
            $("#PASSTYPECODE").kendoComboBox({
                filter: "contains",
                change: function (e) {
                    var widget = e.sender;

                    if (widget.value() && widget.select() === -1) {
                        //custom has been selected
                        widget.value(""); //reset widget
                        //widget.trigger("change");
                    }
                }
            });
            $("#catigory").kendoComboBox({
                filter: "contains",
                change: function (e) {
                    var widget = e.sender;

                    if (widget.value() && widget.select() === -1) {
                        //custom has been selected
                        widget.value(""); //reset widget
                        //widget.trigger("change");
                    }
                }
            });

            $("#yes_car").change(function () {
                var div = document.getElementById("car_option");
                if (this.checked) {
                    div.style.display = 'block';
                    document.getElementById("is_with_car").value = "yes";
                }
                else {
                    div.style.display = 'none';
                    document.getElementById("is_with_car").value = "no";

                }

            });

        });

        $('#deletImage a').click(function (e) {
            e.preventDefault();

            var id = $(this).attr("Id");

            var MSG = confirm("@Resources.Passes.ResourceManager.GetString("File_confirm_delete" + "_" + ViewBag.lang)");

            if (MSG) {

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DeleteImage")',
                    data: { id: id },
                    dataType: "json",
                    success: function () {
                        setTimeout(function () { location.reload(); }, 1);
                    },
                    error: function () {
                        alert("@Resources.Passes.ResourceManager.GetString("Error_delete_file" + "_" + ViewBag.lang)");
                    }
                });
            }
        });

         $.ajax({
        type: 'GET',
        url: '@Url.Action("GetCars")',

        dataType: 'json',

            data: { catigory: $("#catigory").val() },


        success: function (states) {


        $.each(states, function (i, state) {
            //$("#car").append('<option value="' + state['VECHILE_NAME_CODE'] + '">"' + state['VECHILE_NAME'] + '"</option>');
            $("#car").append('<option value="' + state['VECHILE_NAME_CODE'] + '">' +
                state['VECHILE_NAME'] + '</option>');

        });
        },
        error: function (ex) {
            consol.log(ex);
        }
        });
        $("#catigory").change(function () {
        $("#car").empty();
        $.ajax({
        type: 'GET',
        url: '@Url.Action("GetCars")',

        dataType: 'json',

            data: { catigory: $("#catigory").val() },


        success: function (states) {


        $.each(states, function (i, state) {
            //$("#car").append('<option value="' + state['VECHILE_NAME_CODE'] + '">"' + state['VECHILE_NAME'] + '"</option>');
            $("#car").append('<option value="' + state['VECHILE_NAME_CODE'] + '">' +
                state['VECHILE_NAME'] + '</option>');

        });
        },
        error: function (ex) {
            consol.log(ex);
        }
        });
        return false;
      })

});








    </script>
    <script>

       function showpreview(input) {

            if (input.files && input.files[0]) {

                var val = $(input).val().toLowerCase(),
                    regex = new RegExp("(.*?)\.(gif|jpg|jpeg|JPEG|GIF|JPG)$");

                if (!(regex.test(val))) {
                    $(input).val('');
                    $('#imagePreview').css('display', 'none');

                    alert('@no_file_format');

                }
                else {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#imagePreview').css('display', 'inline');
                        $('#imagePreview').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }
        }
        function AddZones() {


                var zones = JSON.parse('@Html.Raw(Json.Encode(ViewBag.ZONE_CODE))');

                var dvContainer = document.getElementById("dvContainer");
                var div = document.createElement("DIV");
                div.className = "bg-light rounded";
                //Add data
                for (var i = 0; i < zones.length; i++) {
                    var z_id = "#zz_" + zones[i].Value;
                    var zz = $(z_id).text();
                    console.log(zz);
                    if (zz != zones[i].Value) {
                    var ddlZones = document.createElement("INPUT");
                    ddlZones.type = "checkbox"
                    ddlZones.name = "ZONE[]"
                    ddlZones.className = "m-2";
                    ddlZones.id = "zone" + i;
                    ddlZones.value = zones[i].Value;

                    var Sub_ddlZones = document.createElement("INPUT");
                    Sub_ddlZones.type = "text"
                    Sub_ddlZones.name = "SUB_ZONE[]"
                    Sub_ddlZones.value = 0;
                    Sub_ddlZones.hidden = true;

                    var label = document.createElement("label");
                    //Set zone Name in Text part.
                    label.htmlFor = "zone" + i;
                    label.appendChild(document.createTextNode(zones[i].Text));
                    //Set value in Value part.
                    //Add to DIV.

                    var br2 = document.createElement("br");

                    div.appendChild(ddlZones);
                    div.appendChild(label);
                    div.appendChild(Sub_ddlZones);
                    div.appendChild(br2);
                    dvContainer.appendChild(div);
                }

                }


            }



       function AddFiles() {
            //Build an array containing Customer records.


                var file_types = JSON.parse('@Html.Raw(Json.Encode(ViewBag.FILE_TYPES))');



                //Reference the container DIV.
                var fContainer = document.getElementById("fContainer")
                //Add  to DIV.
                var div = document.createElement("DIV");
                div.className = "bg-light p-2 rounded";
                div.id = "file_div";




                //Add the Options to the DropDownList.
                for (var i = 0; i < file_types.length; i++) {
                    //Create  element.
                    var f_id = "#ff_" + file_types[i].Value;
                    var ff = $(f_id).text();
                    console.log(ff);
                    if (ff != file_types[i].Value) {
                        var val = file_types[i].Text.split(/-(.*)/)[1];
                        console.log(val);
                        var val2 = file_types[i].Text.replace(/\-.*/g, "$'");



                        var files = document.createElement("INPUT");
                        files.name = "files";
                        files.type = "file";
                        files.id = "file_" + file_types[i].Value + "_" + val;
                        files.className = "form-control m-1";
                        files.onchange = function () { setFileType(this.id); };


                        var label = document.createElement("label");
                        //Set file Name in Text part.
                        label.htmlFor = "file_types_text" + i;
                        label.appendChild(document.createTextNode(val2));

                        var div_after = document.createElement("DIV");
                        div_after.id = "lbl" + file_types[i].Value;
                        var br2 = document.createElement("br");

                        //div.appendChild(file_types_codes);
                        div.appendChild(label);
                        div.appendChild(files);
                        div.appendChild(div_after);
                        div.appendChild(br2);
                        fContainer.appendChild(div);
                    }

                }


        }

        function setFileType(id) {
            console.log(id);
            var file_id = id.split('_')[1];
            console.log(file_id);
            var val = id.split('_')[2];
            console.log(val);

            var file_types_codes = document.createElement("INPUT");
            file_types_codes.type = "text";
            file_types_codes.name = "FILE_TYPES[]";
            file_types_codes.value = file_id;
            file_types_codes.hidden = true;
            var fContainer = document.getElementById("fContainer");
            fContainer.appendChild(file_types_codes);


            var file_types_text = document.createElement("INPUT");
            file_types_text.type = "text";
            file_types_text.name = "FILE_TYPES_TEXT[]";
            file_types_text.autocomplete = "off";
            file_types_text.placeholder = "@Resources.Settings.ResourceManager.GetString("REMARKS" + "_" + ViewBag.lang)";
            file_types_text.className = "col-md-12 form-control mr-1";


                    if (val == 1) {
                        file_types_text.placeholder = "@Resources.Passes.ResourceManager.GetString("worker_id_card_expaired" + "_" + ViewBag.lang)";
                        file_types_text.className = "col-md-12 form-control mr-1 datepicker_recurring_start";
                        var dateToday = new Date();
                        var yrRange = dateToday.getFullYear() + ":" + (dateToday.getFullYear() + 8);

                        $('body').on('focus', ".datepicker_recurring_start", function () {
                            $(this).datepicker(
                                {
                                dateFormat: "dd/mm/yy",
                                yearRange: yrRange,
                                changeMonth: true,
                                numberOfMonths: 1,
                                changeYear: true,
                            }
                            );
                        });

            }
            var z = "lbl" + file_id;
            var file_div = document.getElementById(z);
            file_div.appendChild(file_types_text);


        }





    </script>


   
    <script src="@Url.Content("~/Scripts/JsBarcode.all.js")"></script>
    <script>
        JsBarcode("#barcode3", "@barcode", {
            format: "code39",
            displayValue: false,
            fontSize: 20,
            height: 20,
            width:1

        });
    </script>


}
