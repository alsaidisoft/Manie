@using APP.Util;
@using portal.Controllers;
@using SecurityClearanceWebApp.Models;
@model SecurityClearanceWebApp.Models.RA42_AUTHORIZATION_PASS_DTL

@{
    ViewBag.Title = "Edit";
    string align = "text-right";
    string alignInverse = "text-left";
    string dir = "ltr";
    if (ViewBag.lang == "ar")
    {
        align = "text-left";
        alignInverse = "text-right";
        dir = "rtl";
    }


    string barcode = Guid.NewGuid().ToString().Substring(0, 5);
    var no_file_format = Resources.Passes.ResourceManager.GetString("file_format" + "_" + ViewBag.lang);
    var controller = "Mypasses";
    if (ViewBag.RESPO_STATE > 1)
    {
        controller = ViewBag.controllerName;
    }

    var required = Resources.Common.ResourceManager.GetString("required" + "_" + ViewBag.lang);
    var expired = Resources.Common.ResourceManager.GetString("expired" + "_" + ViewBag.lang);
    var countinue = Resources.Common.ResourceManager.GetString("countinue" + "_" + ViewBag.lang);
}



<div class="container-fluid" dir="@dir">
    <div class="row">
        @if (ViewBag.RESPO_STATE > 1 || ViewBag.ADMIN == true || ViewBag.DEVELOPER == true)
        {
            @Html.Partial("Index")
        }

        <div class="col-md-12">

            <div class="card shadow-sm">

                <div class="card-header text-primary">
                    <h5>
                        <i class="fa fa-edit"></i>
                        @Resources.Common.ResourceManager.GetString("edit" + "_" + ViewBag.lang)
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-12 @align">
                            <a href="#" onclick="history.back()" class="btn btn-outline-dark">
                                <i class="fa fa-backward"></i>
                                @Resources.Passes.ResourceManager.GetString("back" + "_" + ViewBag.lang)
                            </a>
                        </div>
                    </div>
                </div>

                <div class="card-body">
                    @{
                        if (TempData["Success"] != null)
                        {
                            <p class="alert alert-success">@TempData["Success"]</p>
                        }
                        if (TempData["Erorr"] != null)
                        {
                            <p class="alert alert-danger">@TempData["Erorr"]</p>
                        }
                    }
                    @using (Html.BeginForm("Edit", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="row">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.AUTHORAIZATION_CODE)


                            <div class="col-md-12">
                                @if (ViewBag.RESPO_STATE > 1)
                                {
                                    {
                                        RA42_SECURITY_CLEARANCEEntities db = new RA42_SECURITY_CLEARANCEEntities();

                                        var v = db.RA42_AUTHORIZATION_PASS_DTL.Where(a => a.SERVICE_NUMBER == Model.SERVICE_NUMBER && a.CRD_DT != Model.CRD_DT && a.DLT_STS != true).ToList();
                                        if (v.Count > 0)
                                        {
                                            var m = 1;
                                            <div class="col-md-12 bg-light rounded p-2">
                                                <h4 class="text-primary">@Resources.Passes.ResourceManager.GetString("old_passes" + "_" + ViewBag.lang): </h4>
                                                <hr />
                                                @foreach (var item in v)
                                                {

                                                    <p>
                                                        <span class="bg-dark text-white pr-1 pl-1 rounded">@m.</span><a href="@Url.Action("Details", ViewBag.controllerName, new { id = item.AUTHORAIZATION_CODE })" class="btn btn-link" target="_blank">
    @Resources.Passes.ResourceManager.GetString("Status" + "_" + ViewBag.lang):  @if (item.REJECTED == true)
    {
        <span class="text-danger  p-1 m-1"><i class="fa fa-times-circle"></i> @Resources.Passes.ResourceManager.GetString("Reject" + "_" + ViewBag.lang)</span>

    }
    else
    {
        if (item.STATUS == true)
        {
            <span class="text-success  p-0 m-1"> <i class="fa fa-check-circle"></i> @Resources.Passes.ResourceManager.GetString("Approve" + "_" + ViewBag.lang)</span>

        }
        else
        {
            <span class="text-warning  p-1 m-1"><i class="fa fa-spinner fa-spin"></i> @Resources.Passes.ResourceManager.GetString("Progress" + "_" + ViewBag.lang)</span>

        }

    }
    | @Resources.Passes.ResourceManager.GetString("UNIT_CODE" + "_" + ViewBag.lang):
    @(Language.GetCurrentLang() == "en" ? Model.RA42_STATIONS_MST.STATION_NAME_E : Model.RA42_STATIONS_MST.STATION_NAME_A)
    | @Resources.Passes.ResourceManager.GetString("CRD_DT" + "_" + ViewBag.lang):
    @item.CRD_DT.Value.ToString("dd/MM/yyyy")
    |@if (item.DATE_TO > DateTime.Today && item.ISPRINTED == true)
    {<span class="text-primary details"><i class="fa fa-clock"></i> @countinue</span>}
else
{<span class="text-danger"><i class="fa fa-clock"></i> @expired </span>}
</a>
                                                    </p>
                                                    {
                                                        m = m + 1;
                                                    }
                                                    <hr />

                                                }
                                            </div>
                                        }

                                        <br />
                                    }
                                }
                                <div class="form-group">

                                    @{
                                        var image1 = "";
                                        var kafeel = Resources.Passes.ResourceManager.GetString("Pass_owner" + "_" + ViewBag.lang);

                                        var image2 = "http://mamrafowebgov01/images/" + Model.SERVICE_NUMBER + ".gif";
                                        if (Model.PERSONAL_IMAGE != null)
                                        {
                                            kafeel = Resources.Passes.ResourceManager.GetString("Pass_responsible" + "_" + ViewBag.lang);
                                            image1 = "~/Files/Profiles/" + Model.PERSONAL_IMAGE;
                                        }


                                    }
                                    <div class="card ">
                                        <div class="card-header">@Resources.Passes.ResourceManager.GetString("Personal_image" + "_" + ViewBag.lang)</div>
                                        <div class="row p-4">
                                            <div class="col-2 text-center bg-light p-2">
                                                <div class="card-title text-center">@kafeel </div>
                                                <img src="@image2" onerror="this.onerror = null; this.src='@Url.Content("~/Content/images/adminpic.png")'" alt="user image" width="100" height="100">
                                            </div>
                                            @if (image1 != "")
                                            {
                                                <div class="col-2 text-center bg-light p-2">
                                                    <div class="card-title text-center">@Resources.Passes.ResourceManager.GetString("Pass_owner" + "_" + ViewBag.lang)</div>
                                                    <img src="@Url.Content(image1)" onerror="this.onerror = null; this.src='@Url.Content("~/Content/images/adminpic.png")'" alt="user image" width="100" height="100">
                                                    <span id="deletImage"><a href="" id="@Model.AUTHORAIZATION_CODE" class="btn-sm btn-danger"><i class="fa fa-times-circle"></i> </a></span>

                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <hr />
                                <br />
                            </div>
                            @if (ViewBag.RESPO_STATE == 4 && Model.ISOPENED == true)
                            {
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Service_number" + "_" + ViewBag.lang)
                                        @Html.EditorFor(model => model.SERVICE_NUMBER, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        @Html.ValidationMessageFor(model => model.SERVICE_NUMBER, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Personal_image" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            <input type="file" name="PERSONAL_IMAGE" accept="image/*" class="form-control" />
                                        }
                                        else
                                        {
                                            <input type="file" name="PERSONAL_IMAGE" accept="image/*" class="form-control" readonly />
                                        }
                                        @Html.ValidationMessageFor(model => model.PERSONAL_IMAGE, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                if (Model.CIVIL_NUMBER != null)
                                {
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Civil_number" + "_" + ViewBag.lang)
                                            @if (Model.REJECTED == true)
                                            {
                                                @Html.EditorFor(model => model.CIVIL_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
                                            }
                                            else
                                            {
                                                @Html.EditorFor(model => model.CIVIL_NUMBER, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                            }
                                            @Html.ValidationMessageFor(model => model.CIVIL_NUMBER, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    @Html.HiddenFor(model => model.CIVIL_NUMBER)
                                }

                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Rank_a" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.RANK_A, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.RANK_A, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.RANK_A, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Rank_e" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.RANK_E, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.RANK_E, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.RANK_E, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Name_a" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.NAME_A, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.NAME_A, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.NAME_A, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Name_e" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.NAME_E, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.NAME_E, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.NAME_E, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Proffision_a" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.PROFESSION_A, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.PROFESSION_A, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.PROFESSION_A, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Proffision_e" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.PROFESSION_E, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.PROFESSION_E, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.PROFESSION_E, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Unit_a" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.UNIT_A, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.UNIT_A, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.UNIT_A, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Unit_e" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.UNIT_E, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.UNIT_E, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.UNIT_E, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Phone_number" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.PHONE_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.PHONE_NUMBER, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.PHONE_NUMBER, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Gsm" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.GSM, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.GSM, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.GSM, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Property_issued" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.DATE_FROM, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;", onkeydown = "javascript: return false;" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.DATE_FROM, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;", @ReadOnly = true, onkeydown = "javascript: return false;" } })
                                        }
                                        @Html.ValidationMessageFor(model => model.DATE_FROM, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Property_expired" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.DATE_TO, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;", onkeydown = "javascript: return false;" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.DATE_TO, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;", @ReadOnly = true, onkeydown = "javascript: return false;" } })
                                        }
                                        @Html.ValidationMessageFor(model => model.DATE_TO, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("PURPOSE_OF_PASS" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.TextAreaFor(model => model.PURPOSE_OF_PASS, new { @class = "form-control" })

                                        }
                                        else
                                        {
                                            @Html.TextAreaFor(model => model.PURPOSE_OF_PASS, new { @class = "form-control", @ReadOnly = true })

                                        }
                                        @Html.ValidationMessageFor(model => model.PURPOSE_OF_PASS, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Remarks" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.TextAreaFor(model => model.REMARKS, new { @class = "form-control" })

                                        }
                                        else
                                        {
                                            @Html.TextAreaFor(model => model.REMARKS, new { @class = "form-control", @ReadOnly = true })

                                        }
                                        @Html.ValidationMessageFor(model => model.REMARKS, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            else
                            {
                                if (ViewBag.RESPO_STATE == 3 || ViewBag.RESPO_STATE == 5 || ViewBag.RESPO_STATE == 6 || Model.ISOPENED != true)
                                {
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Service_number" + "_" + ViewBag.lang)
                                            @Html.EditorFor(model => model.SERVICE_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.SERVICE_NUMBER, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    if (Model.CIVIL_NUMBER != null)
                                    {
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Resources.Passes.ResourceManager.GetString("Civil_number" + "_" + ViewBag.lang)
                                                @Html.EditorFor(model => model.CIVIL_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.CIVIL_NUMBER, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        @Html.HiddenFor(model => model.CIVIL_NUMBER)
                                    }
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Personal_image" + "_" + ViewBag.lang)
                                            <input type="file" name="PERSONAL_IMAGE" accept="image/*" class="form-control" />
                                            @Html.ValidationMessageFor(model => model.PERSONAL_IMAGE, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Rank_a" + "_" + ViewBag.lang)
                                            @Html.EditorFor(model => model.RANK_A, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.RANK_A, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Rank_e" + "_" + ViewBag.lang)
                                            @Html.EditorFor(model => model.RANK_E, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.RANK_E, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Name_a" + "_" + ViewBag.lang)
                                            @Html.EditorFor(model => model.NAME_A, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NAME_A, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Name_e" + "_" + ViewBag.lang)
                                            @Html.EditorFor(model => model.NAME_E, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NAME_E, "", new { @class = "text-danger" })
                                        </div>
                                    </div>



                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Proffision_a" + "_" + ViewBag.lang)
                                            @Html.EditorFor(model => model.PROFESSION_A, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PROFESSION_A, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Proffision_e" + "_" + ViewBag.lang)
                                            @Html.EditorFor(model => model.PROFESSION_E, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PROFESSION_E, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Unit_a" + "_" + ViewBag.lang)
                                            @Html.EditorFor(model => model.UNIT_A, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.UNIT_A, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Unit_e" + "_" + ViewBag.lang)
                                            @Html.EditorFor(model => model.UNIT_E, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.UNIT_E, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Phone_number" + "_" + ViewBag.lang)

                                            @Html.EditorFor(model => model.PHONE_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PHONE_NUMBER, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Gsm" + "_" + ViewBag.lang)

                                            @Html.EditorFor(model => model.GSM, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.GSM, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-12">
                                        <div class="card">
                                            <div class="card-header">
                                                @Resources.Passes.ResourceManager.GetString("Duration" + "_" + ViewBag.lang)
                                            </div>
                                            <div class="row p-2">
                                                <div class="col-md-4">
                                                    <div class="form-group">
                                                        @Resources.Passes.ResourceManager.GetString("Property_issued" + "_" + ViewBag.lang)

                                                        @Html.EditorFor(model => model.DATE_FROM, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;direction: ltr;", onkeydown = "javascript: return false;", @autocomplete = "off" } })
                                                        @Html.ValidationMessageFor(model => model.DATE_FROM, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="col-md-4">
                                                    <div class="form-group">
                                                        @Resources.Passes.ResourceManager.GetString("Property_expired" + "_" + ViewBag.lang)

                                                        @Html.EditorFor(model => model.DATE_TO, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;direction: ltr;", onkeydown = "javascript: return false;", @autocomplete = "off" } })
                                                        @Html.ValidationMessageFor(model => model.DATE_TO, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    if (ViewBag.DEVELOPER == true)
                                    {
                                        <div class="col-md-8">
                                            <div class="form-group">
                                                @if (ViewBag.Get_Station_Code == "2001")
                                                {
                                                    @Resources.Passes.ResourceManager.GetString("Workflow_respo_hq" + "_" + ViewBag.lang) <b class="text-danger"> * </b>

                                                }
                                                else
                                                {
                                                    @Resources.Passes.ResourceManager.GetString("Workflow_respo" + "_" + ViewBag.lang) <b class="text-danger"> * </b>
                                                }

                                                @Html.DropDownList("WORKFLOW_RESPO_CODE", null, htmlAttributes: new { @class = "form-control w-100", id = "WORKFLOWRESPOCODE", @Style = "width:100%", @required = "", @oninvalid = "this.setCustomValidity('" + required + "')", @oninput = "setCustomValidity('')" })
                                                @Html.ValidationMessageFor(model => model.WORKFLOW_RESPO_CODE, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    }
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("PURPOSE_OF_PASS" + "_" + ViewBag.lang)
                                            @Html.TextAreaFor(model => model.PURPOSE_OF_PASS, new { @class = "form-control", @ReadOnly = true })
                                            @Html.ValidationMessageFor(model => model.PURPOSE_OF_PASS, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Remarks" + "_" + ViewBag.lang)
                                            @Html.TextAreaFor(model => model.REMARKS, new { @class = "form-control", @ReadOnly = true })
                                            @Html.ValidationMessageFor(model => model.REMARKS, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                }
                            }
                            @if (ViewBag.RESPO_STATE == 6)
                            {

                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Barcode" + "_" + ViewBag.lang)
                                        @if (Model.BARCODE != null)
                                        {
                                            <input class="form-control text-box single-line"
                                                   value="@Model.BARCODE"
                                                   name="BARCODE" type="hidden" readonly />
                                            <br />
                                        }
                                        else
                                        {
                                            <input class="form-control text-box single-line"
                                                   value="@barcode"
                                                   name="BARCODE" type="hidden" readonly />
                                            <br />
                                        }
                                        <img id="barcode3" />
                                        @Html.ValidationMessageFor(model => model.BARCODE, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                            }
                            <div class="col-md-12">
                                <h4>
                                    @Resources.Passes.ResourceManager.GetString("Comments" + "_" + ViewBag.lang)
                                </h4>

                                <div class="form-group">
                                    <label class="control-label">
                                        @Resources.Passes.ResourceManager.GetString("Add_comment" + "_" + ViewBag.lang)
                                    </label>
                                    @if (ViewBag.RESPO_STATE == 0)
                                    {
                                        if (Model.REJECTED == true)
                                        {
                                            <textarea name="COMMENT" class="form-control"></textarea>
                                        }
                                        else
                                        {
                                            if (ViewBag.ADMIN == true || ViewBag.DEVELOPER == true)
                                            {
                                                <textarea name="COMMENT" class="form-control"></textarea>
                                            }
                                            else
                                            {
                                                <textarea name="COMMENT" readonly class="form-control"></textarea>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <textarea name="COMMENT" class="form-control"></textarea>
                                    }
                                </div>
                            </div>
                            @if (ViewBag.COMMENTS != null)
                            {

                                foreach (var comment in ViewBag.COMMENTS)
                                {
                                    <div class="col-md-12">
                                        <div class="form-group">

                                            <div class="card-body" style="background: #c8d0d1; border-radius:5px;">
                                                <p class="bg-white p-1 rounded">
                                                    @{

                                                        string name = Resources.Passes.ResourceManager.GetString("Autho_type" + "_" + ViewBag.lang) + ": " + (new UserInfo()).WorkFlowType(comment.CRD_BY) + " - " + (new UserInfo()).FULL_NAME(comment.CRD_BY);

                                                        @name

                                                    }
                                                    - @Resources.Passes.ResourceManager.GetString("Crd_comment_date" + "_" + ViewBag.lang) - @comment.CRD_DT

                                                </p>
                                                <br />
                                                @comment.COMMENT
                                            </div>
                                        </div>
                                    </div>
                                }
                            }









                            <div class="col-md-12">

                                <div class="form-group @align">
                                    @if (ViewBag.STATUS == true)
                                    {

                                        if (ViewBag.RESPO_STATE != 0)
                                        {
                                            if (ViewBag.RESPO_STATE != 1)
                                            {
                                                <button type="submit" value="Approve" class="btn btn-success" name="approvebtn">
                                                    <i class="fa fa-check-circle"></i>
                                                    @Resources.Common.ResourceManager.GetString("approve" + "_" + ViewBag.lang)
                                                </button>
                                            }
                                        }
                                    }

                                    else
                                    {
                                        if (ViewBag.RESPO_STATE == 5 || ViewBag.RESPO_STATE == 6 || ViewBag.RESPO_STATE == 3)
                                        {
                                            <button type="submit" value="Reject" class="btn btn-danger" name="rejectbtn">
                                                <i class="fa fa-minus-circle"></i>
                                                @Resources.Common.ResourceManager.GetString("reject" + "_" + ViewBag.lang)

                                            </button>
                                            <button type="submit" value="Approve" class="btn btn-success" name="approvebtn">
                                                <i class="fa fa-check-circle"></i>
                                                @Resources.Common.ResourceManager.GetString("approve" + "_" + ViewBag.lang)
                                            </button>
                                        }
                                        if (ViewBag.RESPO_STATE <= 1)
                                        {
                                            if (Model.REJECTED == true)
                                            {
                                                <button type="submit" value="Approve" class="btn btn-success" name="approvebtn">
                                                    <i class="fa fa-check-circle"></i>
                                                    @Resources.Common.ResourceManager.GetString("approve" + "_" + ViewBag.lang)
                                                </button>
                                            }
                                            else
                                            {
                                                if (Model.ISOPENED != true)
                                                {
                                                    <button type="submit" value="Approve" class="btn btn-success" name="approvebtn">
                                                        <i class="fa fa-check-circle"></i>
                                                        @Resources.Common.ResourceManager.GetString("approve" + "_" + ViewBag.lang)
                                                    </button>
                                                }
                                            }
                                        }

                                        if (ViewBag.RESPO_STATE == 4)
                                        {
                                            if (Model.REJECTED == true)
                                            {
                                                <button type="submit" value="Approve" class="btn btn-success" name="approvebtn">
                                                    <i class="fa fa-check-circle"></i>
                                                    @Resources.Common.ResourceManager.GetString("approve" + "_" + ViewBag.lang)
                                                </button>
                                            }
                                        }

                                    }
                                </div>


                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>








@section Scripts {
    <link href="~/Content/select2.min.css" rel="stylesheet" />
    <script src="~/Scripts/select2.min.js"></script>
    <link href="~/Content/Kendo/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="~/Content/Kendo/styles/kendo.default.min.css" rel="stylesheet" />
    <script src="~/Scripts/Kendo/js/kendo.all.min.js"></script>
    <script>
        $(document).ready(function () {
            //$("#DATE_FROM").kendoDatePicker({
            //    format: "dd/MM/yyyy"
            //});
            //$("#DATE_TO").kendoDatePicker({
            //    format: "dd/MM/yyyy"
            //});

            $(function () {
                var dateToday = new Date();
                var yrRange = dateToday.getFullYear() + ":" + (dateToday.getFullYear() + 2);
                $("#DATE_FROM").datepicker({
                    //minDate: 0,
                    dateFormat: "dd/mm/yy",
                    yearRange: yrRange,
                    changeMonth: true,
                    numberOfMonths: 1,
                    changeYear: true,
                    onClose: function (selectedDate, inst) {
                        var minDate = new Date(Date.parse(selectedDate));
                        //minDate.setDate(maxDate.getDate() + 1);
                        $("#DATE_TO").datepicker("option", "minDate", selectedDate);
                    }
                });

                $("#DATE_TO").datepicker({
                    minDate: "+1D",
                    dateFormat: "dd/mm/yy",
                    yearRange: yrRange,
                    changeMonth: true,
                    numberOfMonths: 1,
                    changeYear: true,
                    onClose: function (selectedDate, inst) {
                        var maxDate = new Date(Date.parse(selectedDate));
                         //maxDate.setDate(maxDate.getDate() - 1);
                        //$("#DATE_FROM").datepicker("option", "maxDate", maxDate);
                    }
                });
            });

            //$("#WORKFLOWRESPOCODE").select2();

            //$("#WORKFLOWRESPOCODE").kendoComboBox({
            //    filter: "contains",
            //    change: function (e) {
            //        var widget = e.sender;

            //        if (widget.value() && widget.select() === -1) {
            //            //custom has been selected
            //            widget.value(""); //reset widget
            //            //widget.trigger("change");
            //        }
            //    }
            //});
             $('#deletImage a').click(function (e) {
            e.preventDefault();

            var id = $(this).attr("Id");

            var MSG = confirm("@Resources.Passes.ResourceManager.GetString("File_confirm_delete" + "_" + ViewBag.lang)");

            if (MSG) {

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DeleteImage")',
                    data: { id: id },
                    dataType: "json",
                    success: function () {
                        setTimeout(function () { location.reload(); }, 1);
                    },
                    error: function () {
                        alert("@Resources.Passes.ResourceManager.GetString("Error_delete_file" + "_" + ViewBag.lang)");
                    }
                });
            }
            })
            //check uploaded image extention
            $(function () {
                $('input[type=file]').change(function () {
                    var val = $(this).val().toLowerCase(),
                        regex = new RegExp("(.*?)\.(gif|jpg|jpeg|JPEG|GIF|JPG)$");

                    if (!(regex.test(val))) {
                        $(this).val('');
                        alert('@no_file_format');
                    }
                });
            });
        });
    </script>

    <script src="@Url.Content("~/Scripts/JsBarcode.all.js")"></script>
    <script>
        //create barcode by using JsBarcode library
        JsBarcode("#barcode3", "@barcode", {
            format: "code39",
            displayValue: false,
            fontSize: 20,
            height: 20,
            width:1

        });
    </script>

}
