@using Newtonsoft.Json;
@using portal.Controllers;
@using SecurityClearanceWebApp.Models;
@using APP.Util;
@model SecurityClearanceWebApp.Models.RA42_CONTRACTING_COMPANIES_PASS_DTL

@{
    ViewBag.Title = "Edit";
    string align = "text-right";
    string alignInverse = "text-left";
    string dir = "ltr";
    var flt = "left";
    if (ViewBag.lang == "ar")
    {
        align = "text-left";
        alignInverse = "text-right";
        dir = "rtl";
        flt = "right";

    }


    var agree = Resources.Common.ResourceManager.GetString("error_agree" + "_" + ViewBag.lang);
    var main_z = Resources.Passes.ResourceManager.GetString("main_zone" + "_" + ViewBag.lang);
    var sub_z = Resources.Passes.ResourceManager.GetString("sub_zone" + "_" + ViewBag.lang);
    var remove = Resources.Passes.ResourceManager.GetString("Remove" + "_" + ViewBag.lang);
    var all = Resources.Passes.ResourceManager.GetString("All" + "_" + ViewBag.lang);
    var choose_sub_z = Resources.Passes.ResourceManager.GetString("choose_sub_zone_again" + "_" + ViewBag.lang);
    var no_file_ = Resources.Passes.ResourceManager.GetString("not_allowed_m_ten" + "_" + ViewBag.lang);
    var no_zone_ = Resources.Passes.ResourceManager.GetString("not_allowed_m_50" + "_" + ViewBag.lang);
    var no_file_format = Resources.Passes.ResourceManager.GetString("file_format" + "_" + ViewBag.lang);
    var doc = Resources.Passes.ResourceManager.GetString("document_type" + "_" + ViewBag.lang);
    var no_persons = Resources.Passes.ResourceManager.GetString("Not_allowed_50_person" + "_" + ViewBag.lang);
    var relative = Resources.Passes.ResourceManager.GetString("Relative_type" + "_" + ViewBag.lang);
    var civil_num = Resources.Passes.ResourceManager.GetString("Civil_number" + "_" + ViewBag.lang);
    var identity = Resources.Passes.ResourceManager.GetString("Identity" + "_" + ViewBag.lang);
    var gender = Resources.Passes.ResourceManager.GetString("Gender" + "_" + ViewBag.lang);
    var documents = Resources.Passes.ResourceManager.GetString("Documents" + "_" + ViewBag.lang);
    var expired = Resources.Common.ResourceManager.GetString("expired" + "_" + ViewBag.lang);
    var countinue = Resources.Common.ResourceManager.GetString("countinue" + "_" + ViewBag.lang);
    var returned = "-" + Resources.Passes.ResourceManager.GetString("returned" + "_" + ViewBag.lang);

    var controller = "Mypasses";

    string barcode = Guid.NewGuid().ToString().Substring(0, 5);
    var col = 12;
    var required = Resources.Common.ResourceManager.GetString("required" + "_" + ViewBag.lang);
    string currentUser = (new UserInfo()).getSNO();


}



<div class="container-fluid" dir="@dir">
    <div class="row">

        @if (ViewBag.RESPO_STATE > 1 || ViewBag.ADMIN == true || ViewBag.DEVELOPER == true)
        {
            @Html.Partial("Index")
        }


        <div class="col-md-12">

            <div class="card shadow-sm">

                <div class="card-header text-primary">
                    <h5>
                        <i class="fa fa-edit"></i>
                        @Resources.Common.ResourceManager.GetString("edit" + "_" + ViewBag.lang)
                    </h5>
                </div>

                <div class="card-body">
                    <div class="row">
                        <div class="col-md-12 @align">
                            <a href="#" onclick="history.back()" class="btn btn-outline-dark">
                                <i class="fa fa-backward"></i>
                                @Resources.Passes.ResourceManager.GetString("back" + "_" + ViewBag.lang)
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @{
                        if (TempData["Success"] != null)
                        {
                            <p class="alert alert-success">@TempData["Success"]</p>
                        }
                        if (TempData["Erorr"] != null)
                        {
                            <p class="alert alert-danger">@TempData["Erorr"]</p>
                        }
                    }
                    @using (Html.BeginForm("Edit", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        if (Model.CRD_BY.ToUpper() != currentUser.ToUpper())
                        {
                            <div class="card">
                                <div class="card-header">@Resources.Passes.ResourceManager.GetString("requested_by" + "_" + ViewBag.lang)</div>
                                <div class="card-body">
                                    <input type="hidden" value="@Model.CRD_BY" class="service-number-field" />
                                </div>
                            </div>
                            <br />
                        }
                        <div class="row">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.CONTRACT_CODE)
                            @Html.HiddenFor(model => model.SERVICE_NUMBER)

                            <div class="col-md-12">

                                @if (ViewBag.RESPO_STATE > 1)
                                {
                                    {
                                        RA42_SECURITY_CLEARANCEEntities db = new RA42_SECURITY_CLEARANCEEntities();

                                        var v = db.RA42_CONTRACTING_COMPANIES_PASS_DTL.Where(a => a.ID_CARD_NUMBER == Model.ID_CARD_NUMBER && a.CRD_DT != Model.CRD_DT && a.DLT_STS != true).ToList();
                                        if (v.Count > 0)
                                        {
                                            var m = 1;
                                            <div class="col-md-12 bg-light rounded p-2">
                                                <h4 class="text-primary">@Resources.Passes.ResourceManager.GetString("old_passes" + "_" + ViewBag.lang): </h4>
                                                <hr />
                                                @foreach (var item in v)
                                                {

                                                    <p>
                                                        <span class="bg-dark text-white pr-1 pl-1 rounded">@m.</span><a href="@Url.Action("Details", ViewBag.controllerName, new { id = item.CONTRACT_CODE })" class="btn btn-link" target="_blank">
                                                            @Resources.Passes.ResourceManager.GetString("Status" + "_" + ViewBag.lang):  @if (item.REJECTED == true)
                                                            {
                                                                <span class="text-danger  p-1 m-1"><i class="fa fa-times-circle"></i> @Resources.Passes.ResourceManager.GetString("Reject" + "_" + ViewBag.lang)</span>

                                                            }
                                                            else
                                                            {
                                                                if (item.STATUS == true)
                                                                {
                                                                    <span class="text-success  p-0 m-1"> <i class="fa fa-check-circle"></i> @Resources.Passes.ResourceManager.GetString("Approve" + "_" + ViewBag.lang)</span>

                                                                }
                                                                else
                                                                {
                                                                    <span class="text-warning  p-1 m-1"><i class="fa fa-hourglass-half"></i> @Resources.Passes.ResourceManager.GetString("Progress" + "_" + ViewBag.lang)</span>

                                                                }

                                                            }
                                                            | @Resources.Passes.ResourceManager.GetString("UNIT_CODE" + "_" + ViewBag.lang):
                                                            @(Language.GetCurrentLang() == "en" ? item.RA42_STATIONS_MST.STATION_NAME_E : item.RA42_STATIONS_MST.STATION_NAME_A)
                                                            | @Resources.Passes.ResourceManager.GetString("CRD_DT" + "_" + ViewBag.lang):
                                                            @item.CRD_DT.Value.ToString("dd/MM/yyyy")
                                                            |@if (item.DATE_TO > DateTime.Today && item.ISPRINTED == true)
                                                            {<span class="text-blue details">
    <i class="fa fa-clock"></i> @countinue @if (item.RETURNED == true)
    {@returned}
</span>}
                                                        else
                                                        {<span class="text-danger">
    <i class="fa fa-clock"></i> @expired @if (item.RETURNED == true)
    {@returned}
</span>}
                                                        </a>
                                                    </p>
                                                    {
                                                        m = m + 1;
                                                    }
                                                    <hr />
                                                }
                                            </div>

                                        }

                                        <br />
                                    }
                                }
                                <div class="form-group">


                                    <div class="card ">
                                        <div class="card-header">@Resources.Passes.ResourceManager.GetString("Personal_image" + "_" + ViewBag.lang)</div>
                                        <div class="row p-4">

                                            <div class="col-2 text-center bg-light p-2">
                                                <img src="~/Files/Profiles/@Model.PERSONAL_IMAGE" onerror="this.onerror = null; this.src='@Url.Content("~/Content/images/adminpic.png")'" alt="user image" width="100" height="100">
                                                @if (Model.PERSONAL_IMAGE != null)
                                                {
                                                    <span id="deletImage"><a href="" id="@Model.CONTRACT_CODE" class="btn-sm btn-danger"><i class="fa fa-times-circle"></i> </a></span>
                                                }
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <br />
                            </div>
                            @if (ViewBag.RESPO_STATE <= 1 && Model.ISOPENED != true)
                            {




                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("worker_identity_card" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.ID_CARD_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.ID_CARD_NUMBER, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.ID_CARD_NUMBER, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("worker_id_card_expaired" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.CARD_EXPIRED_DATE, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;", onkeydown = "javascript: return false;" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.CARD_EXPIRED_DATE, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;", @ReadOnly = true, onkeydown = "javascript: return false;" } })
                                        }
                                        @Html.ValidationMessageFor(model => model.CARD_EXPIRED_DATE, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("worker_namea" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.NAME_A, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.NAME_A, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.NAME_A, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("worker_namee" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.NAME_E, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.NAME_E, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.NAME_E, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Proffision_a" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.PROFESSION_A, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.PROFESSION_A, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.PROFESSION_A, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Proffision_e" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.PROFESSION_E, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.PROFESSION_E, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.PROFESSION_E, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("work_place" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.WORK_PLACE, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.WORK_PLACE, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.WORK_PLACE, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Identity" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.DropDownList("IDENTITY_CODE", null, htmlAttributes: new { @class = "form-control", id = "IDENTITY", @Style = "width:100%" })
                                        }
                                        else
                                        {
                                            @Html.DropDownList("IDENTITY_CODE", null, htmlAttributes: new { @class = "form-control", id = "IDENTITY", @Style = "width:100%", @ReadOnly = true })
                                        }
                                        @Html.ValidationMessageFor(model => model.IDENTITY_CODE, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">

                                        @Resources.Passes.ResourceManager.GetString("Gender" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.DropDownList("GENDER_ID", null, htmlAttributes: new { @class = "form-control", id = "GENDER", @Style = "width:100%" })
                                        }
                                        else
                                        {
                                            @Html.DropDownList("GENDER_ID", null, htmlAttributes: new { @class = "form-control", id = "GENDER", @Style = "width:100%", @ReadOnly = true })

                                        }
                                        @Html.ValidationMessageFor(model => model.GENDER_ID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Gender" + "_" + ViewBag.lang)

                                        @Html.DropDownList("GENDER_ID", null, htmlAttributes: new { @class = "form-control", id = "GENDER", @Style = "width:100%" })
                                        @Html.ValidationMessageFor(model => model.GENDER_ID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="row">
                                        <div class="col-md-11">
                                            <div class="form-group">
                                                @Resources.Passes.ResourceManager.GetString("Personal_image" + "_" + ViewBag.lang)
                                                <input type="file" name="PERSONAL_IMAGE" accept="image/*" class="form-control" onchange="showpreview(this);" />
                                                @Html.ValidationMessageFor(model => model.PERSONAL_IMAGE, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-1 p-2">
                                            <img src="~/Content/images/adminpic.png" style="display: none;" width="50" height="50" id="imagePreview" />
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Pass_type" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.DropDownList("PASS_TYPE_CODE", null, htmlAttributes: new { @class = "form-control", id = "PASSTYPECODE", @Style = "width:100%" })
                                        }
                                        else
                                        {
                                            @Html.DropDownList("PASS_TYPE_CODE", null, htmlAttributes: new { @class = "form-control", id = "PASSTYPECODE", @Style = "width:100%", @ReadOnly = true })
                                        }
                                        @Html.ValidationMessageFor(model => model.IDENTITY_CODE, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("work_place" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.WORK_PLACE, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.WORK_PLACE, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.WORK_PLACE, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("address" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.ADDRESS, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.ADDRESS, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.ADDRESS, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Gsm" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.GSM, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.GSM, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.GSM, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-12">
                                    <br />
                                    <div class="card">
                                        <div class="card-header">
                                            @Resources.Passes.ResourceManager.GetString("Duration" + "_" + ViewBag.lang)
                                        </div>
                                        <div class="row p-2">
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    @Resources.Passes.ResourceManager.GetString("Property_issued" + "_" + ViewBag.lang)
                                                    @if (Model.REJECTED == true)
                                                    {
                                                        @Html.EditorFor(model => model.DATE_FROM, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;", onkeydown = "javascript: return false;" } })
                                                    }
                                                    else
                                                    {
                                                        @Html.EditorFor(model => model.DATE_FROM, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;", @ReadOnly = true, onkeydown = "javascript: return false;" } })
                                                    }

                                                    @Html.ValidationMessageFor(model => model.DATE_FROM, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    @Resources.Passes.ResourceManager.GetString("Property_expired" + "_" + ViewBag.lang)
                                                    @if (Model.REJECTED == true)
                                                    {
                                                        @Html.EditorFor(model => model.DATE_TO, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;", onkeydown = "javascript: return false;" } })
                                                    }
                                                    else
                                                    {
                                                        @Html.EditorFor(model => model.DATE_TO, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;", @ReadOnly = true, onkeydown = "javascript: return false;" } })

                                                    }
                                                    @Html.ValidationMessageFor(model => model.DATE_TO, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("respo_unit" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.EditorFor(model => model.RESPONSIBLE, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.RESPONSIBLE, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                        }
                                        @Html.ValidationMessageFor(model => model.RESPONSIBLE, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("company_name" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.DropDownList("COMPANY_CODE", null, htmlAttributes: new { @class = "form-control", id = "COMPANYCODE", @Style = "width:100%" })
                                        }
                                        else
                                        {
                                            @Html.DropDownList("COMPANY_CODE", null, htmlAttributes: new { @class = "form-control", id = "COMPANYCODE", @Style = "width:100%", @ReadOnly = true })
                                        }
                                        @Html.ValidationMessageFor(model => model.COMPANY_CODE, "", new { @class = "text-danger" })
                                    </div>
                                </div>






                                if (Model.REJECTED == true)
                                {
                                    <div class="col-12"><hr /></div>
                                    <br />



                                    <div class="col-md-4">

                                        <div class="col-md-12">
                                            <h5 class="alert-secondary alert text-center">
                                                <i class="fa fa-file-pdf p-1"></i> @documents
                                            </h5>
                                        </div>


                                        <div class="form-group">
                                            <div class="col-md-12">
                                                <div id="fContainer"></div>
                                            </div>
                                        </div>
                                    </div>




                                }


                                <div class="col-lg-8">
                                    @{
                                        int[] a = new int[100];
                                        int x = 0;
                                    }
                                    @if (ViewBag.GetFiles.Count != 0)
                                    {
                                        foreach (var listFiles in ViewBag.GetFiles)
                                        {
                                            if (listFiles.FILE_TYPE != null)
                                            {
                                                if (!string.IsNullOrWhiteSpace(listFiles.FILE_TYPE_TEXT))
                                                {
                                                    bool check = DateTime.TryParse(listFiles.FILE_TYPE_TEXT, out DateTime dateTime);
                                                    if (check == true)
                                                    {
                                                        var exp = countinue;
                                                        var div = "alert-success";
                                                        DateTime d = Convert.ToDateTime(listFiles.FILE_TYPE_TEXT);
                                                        if (d < DateTime.Now)
                                                        {
                                                            exp = expired;
                                                            div = "alert-danger";
                                                        }
                                                        <div class="col-md-12">
                                                            <div class="btn btn-outline-dark mt-1 btn-block">
                                                                <i class="fa fa-file-pdf p-1"></i> @(Language.GetCurrentLang() == "en" ? @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE_E: @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE) <span class="@div p-1 rounded">@exp | @listFiles.FILE_TYPE_TEXT </span> <a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-warning btn-sm mr-1" target="_blank"><i class="fa fa-external-link-alt"></i></a><a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-primary details btn-sm mr-1" download><i class="fa fa-download"></i></a>
                                                                @if (Model.REJECTED == true)
                                                                {<span id="deletfile"><a href="" id="@listFiles.FILE_CODE" class="float-left btn-danger btn-sm"><i class="fa fa-trash"></i></a></span>}
                                                                else
                                                                { }
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="col-md-12">
                                                            <div class="btn btn-outline-dark mt-1 btn-block">
                                                                <i class="fa fa-file-pdf p-1"></i> @(Language.GetCurrentLang() == "en" ? @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE_E: @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE) | <span class="text-primary alert-light  rounded">@listFiles.FILE_TYPE_TEXT</span> <a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-warning btn-sm mr-1" target="_blank"><i class="fa fa-external-link-alt"></i></a><a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-primary details btn-sm mr-1" download><i class="fa fa-download"></i></a>
                                                                @if (Model.REJECTED == true)
                                                                {<span id="deletfile"><a href="" id="@listFiles.FILE_CODE" class="float-left btn-danger btn-sm"><i class="fa fa-trash"></i></a></span>}
                                                                else
                                                                { }
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                                else
                                                {
                                                    <div class="col-md-12">
                                                        <div class="btn btn-outline-dark mt-1 btn-block">
                                                            <i class="fa fa-file-pdf p-1"></i> @(Language.GetCurrentLang() == "en" ? @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE_E: @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE) <a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-warning btn-sm mr-1" target="_blank"><i class="fa fa-external-link-alt"></i></a><a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-primary details btn-sm mr-1" download><i class="fa fa-download"></i></a>
                                                            @if (Model.REJECTED == true)
                                                            {<span id="deletfile"><a href="" id="@listFiles.FILE_CODE" class="float-left btn-danger btn-sm"><i class="fa fa-trash"></i></a></span>}
                                                            else
                                                            { }
                                                        </div>
                                                    </div>
                                                }

                                                {
                                                    a[x] = listFiles.FILE_TYPE;
                                                    x++;
                                                }
                                                <span style="display:none" id="ff_@listFiles.FILE_TYPE">@listFiles.FILE_TYPE</span>


                                            }
                                        }

                                        if (ViewBag.PASS_FILES != ViewBag.GetFiles.Count)
                                        {
                                            <div class="col-md-12 p-4">
                                                <h5>
                                                    <i class="fa fa-file-alt"></i>
                                                    @Resources.Passes.ResourceManager.GetString("documents_not_fit" + "_" + ViewBag.lang)
                                                </h5>
                                            </div>


                                            foreach (var fileType in ViewBag.PASS_FILES_2)
                                            {



                                                var json = JsonConvert.SerializeObject(fileType, Formatting.Indented);
                                                var json2 = @"[" + json + "]";
                                                var data = JsonConvert.DeserializeObject<List<dynamic>>(json2);
                                                int k = Convert.ToInt32(data[0].FILE_TYPE_CODE);
                                                if (!a.ToList().Contains(k))
                                                {


                                                    <div class="col-md-12">
                                                        <div class="btn btn-outline-danger mt-1 btn-block"><i class="fa fa-exclamation-triangle p-1"></i> @(Language.GetCurrentLang() == "en" ? data[0].FILE_TYPE_E : data[0].FILE_TYPE)</div>
                                                    </div>



                                                }

                                            }
                                        }
                                    }
                                    @if (ViewBag.GetFiles.Count == 0)
                                    {
                                        <div class="col-md-12">
                                            <div class="alert alert-danger"><i class="fa fa-exclamation"></i> @Resources.Passes.ResourceManager.GetString("documents_not_complete" + "_" + ViewBag.lang)</div>
                                        </div>
                                    }
                                </div>



                                <br />

                                <div class="col-12"><hr /></div>


                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("PURPOSE_OF_PASS" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.TextAreaFor(model => model.PURPOSE_OF_PASS, new { @class = "form-control" })

                                        }
                                        else
                                        {
                                            @Html.TextAreaFor(model => model.PURPOSE_OF_PASS, new { @class = "form-control", @ReadOnly = true })

                                        }
                                        @Html.ValidationMessageFor(model => model.PURPOSE_OF_PASS, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Remarks" + "_" + ViewBag.lang)
                                        @if (Model.REJECTED == true)
                                        {
                                            @Html.TextAreaFor(model => model.REMARKS, new { @class = "form-control" })

                                        }
                                        else
                                        {
                                            @Html.TextAreaFor(model => model.REMARKS, new { @class = "form-control", @ReadOnly = true })

                                        }
                                        @Html.ValidationMessageFor(model => model.REMARKS, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            }
                            else
                            {
                                if (ViewBag.RESPO_STATE > 1 || Model.ISOPENED == true)
                                {


                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("respo_unit" + "_" + ViewBag.lang)
                                            @Html.EditorFor(model => model.RESPONSIBLE, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.RESPONSIBLE, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("company_name" + "_" + ViewBag.lang)

                                            @Html.DropDownList("COMPANY_CODE", null, htmlAttributes: new { @class = "form-control", id = "COMPANYCODE", @Style = "width:100%" })
                                            @Html.ValidationMessageFor(model => model.COMPANY_CODE, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    if ((Model.ISOPENED != true && ViewBag.RESPO_STATE <= 1) || ViewBag.DEVELOPER == true)
                                    {
                                        <div class="col-md-8">
                                            <div class="form-group">

                                                @Resources.Passes.ResourceManager.GetString("Workflow_respo" + "_" + ViewBag.lang)

                                                @Html.DropDownList("WORKFLOW_RESPO_CODE", null, htmlAttributes: new { @class = "form-control", id = "WORKFLOWRESPOCODE", @Style = "width:100%" })
                                                @Html.ValidationMessageFor(model => model.WORKFLOW_RESPO_CODE, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    }


                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("worker_identity_card" + "_" + ViewBag.lang)
                                            @Html.EditorFor(model => model.ID_CARD_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ID_CARD_NUMBER, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("worker_id_card_expaired" + "_" + ViewBag.lang)
                                            @Html.EditorFor(model => model.CARD_EXPIRED_DATE, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;", onkeydown = "javascript: return false;" } })
                                            @Html.ValidationMessageFor(model => model.CARD_EXPIRED_DATE, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("worker_namea" + "_" + ViewBag.lang)
                                            @Html.EditorFor(model => model.NAME_A, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NAME_A, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("worker_namee" + "_" + ViewBag.lang)
                                            @Html.EditorFor(model => model.NAME_E, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NAME_E, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Proffision_a" + "_" + ViewBag.lang)
                                            @Html.EditorFor(model => model.PROFESSION_A, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PROFESSION_A, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Proffision_e" + "_" + ViewBag.lang)
                                            @Html.EditorFor(model => model.PROFESSION_E, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PROFESSION_E, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Identity" + "_" + ViewBag.lang)
                                            @Html.DropDownList("IDENTITY_CODE", null, htmlAttributes: new { @class = "form-control", id = "IDENTITY", @Style = "width:100%" })
                                            @Html.ValidationMessageFor(model => model.IDENTITY_CODE, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Gender" + "_" + ViewBag.lang)

                                            @Html.DropDownList("GENDER_ID", null, htmlAttributes: new { @class = "form-control", id = "GENDER", @Style = "width:100%" })
                                            @Html.ValidationMessageFor(model => model.GENDER_ID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="row">
                                            <div class="col-md-11">
                                                <div class="form-group">
                                                    @Resources.Passes.ResourceManager.GetString("Personal_image" + "_" + ViewBag.lang)
                                                    <input type="file" name="PERSONAL_IMAGE" accept="image/*" class="form-control" onchange="showpreview(this);" />
                                                    @Html.ValidationMessageFor(model => model.PERSONAL_IMAGE, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-1 p-2">
                                                <img src="~/Content/images/adminpic.png" style="display: none;" width="50" height="50" id="imagePreview" />
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Pass_type" + "_" + ViewBag.lang)
                                            @Html.DropDownList("PASS_TYPE_CODE", null, htmlAttributes: new { @class = "form-control", id = "PASSTYPECODE", @Style = "width:100%" })
                                            @Html.ValidationMessageFor(model => model.PASS_TYPE_CODE, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("work_place" + "_" + ViewBag.lang)

                                            @Html.EditorFor(model => model.WORK_PLACE, new { htmlAttributes = new { @class = "form-control" } })


                                            @Html.ValidationMessageFor(model => model.WORK_PLACE, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("address" + "_" + ViewBag.lang)
                                            @Html.EditorFor(model => model.ADDRESS, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ADDRESS, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Gsm" + "_" + ViewBag.lang)
                                            @Html.EditorFor(model => model.GSM, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.GSM, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-12">
                                        <br />
                                        <div class="card">
                                            <div class="card-header">
                                                @Resources.Passes.ResourceManager.GetString("Duration" + "_" + ViewBag.lang)
                                            </div>
                                            <div class="row p-2">
                                                <div class="col-md-4">
                                                    <div class="form-group">
                                                        @Resources.Passes.ResourceManager.GetString("Property_issued" + "_" + ViewBag.lang)
                                                        @Html.EditorFor(model => model.DATE_FROM, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;", onkeydown = "javascript: return false;", @autocomplete = "off" } })
                                                        @Html.ValidationMessageFor(model => model.DATE_FROM, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="col-md-4">
                                                    <div class="form-group">
                                                        @Resources.Passes.ResourceManager.GetString("Property_expired" + "_" + ViewBag.lang)
                                                        @Html.EditorFor(model => model.DATE_TO, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;", onkeydown = "javascript: return false;", @autocomplete = "off" } })
                                                        @Html.ValidationMessageFor(model => model.DATE_TO, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                    <br />
                                    <div class="col-12"><hr /></div>
                                    <br />




                                    <div class="col-md-4">

                                        <div class="col-md-12">
                                            <h5 class="alert-secondary alert text-center">
                                                <i class="fa fa-file-pdf p-1"></i> @documents
                                            </h5>
                                        </div>


                                        <div class="form-group">
                                            <div class="col-md-12">
                                                <div id="fContainer"></div>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-lg-8">
                                        @{
                                            int[] a = new int[100];
                                            int x = 0;
                                        }
                                        @if (ViewBag.GetFiles.Count != 0)
                                        {
                                            foreach (var listFiles in ViewBag.GetFiles)
                                            {
                                                if (listFiles.FILE_TYPE != null)
                                                {
                                                    if (!string.IsNullOrWhiteSpace(listFiles.FILE_TYPE_TEXT))
                                                    {
                                                        bool check = DateTime.TryParse(listFiles.FILE_TYPE_TEXT, out DateTime dateTime);
                                                        if (check == true)
                                                        {
                                                            var exp = countinue;
                                                            var div = "alert-success";
                                                            DateTime d = Convert.ToDateTime(listFiles.FILE_TYPE_TEXT);
                                                            if (d < DateTime.Now)
                                                            {
                                                                exp = expired;
                                                                div = "alert-danger";
                                                            }
                                                            <div class="col-md-12">
                                                                <div class="btn btn-outline-dark mt-1 btn-block"><i class="fa fa-file-pdf p-1"></i> @(Language.GetCurrentLang() == "en" ? @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE_E: @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE) <span class="@div p-1 rounded">@exp | @listFiles.FILE_TYPE_TEXT </span> <a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-warning btn-sm mr-1" target="_blank"><i class="fa fa-external-link-alt"></i></a><a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-primary details btn-sm mr-1" download><i class="fa fa-download"></i></a> <span id="deletfile"><a href="" id="@listFiles.FILE_CODE" class="float-left btn-danger btn-sm"><i class="fa fa-trash"></i></a></span></div>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="col-md-12">
                                                                <div class="btn btn-outline-dark mt-1 btn-block"><i class="fa fa-file-pdf p-1"></i> @(Language.GetCurrentLang() == "en" ? @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE_E: @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE) | <span class="text-primary alert-light  rounded">@listFiles.FILE_TYPE_TEXT</span> <a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-warning btn-sm mr-1" target="_blank"><i class="fa fa-external-link-alt"></i></a><a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-primary details btn-sm mr-1" download><i class="fa fa-download"></i></a> <span id="deletfile"><a href="" id="@listFiles.FILE_CODE" class="float-left btn-danger btn-sm"><i class="fa fa-trash"></i></a></span></div>
                                                            </div>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <div class="col-md-12">
                                                            <div class="btn btn-outline-dark mt-1 btn-block"><i class="fa fa-file-pdf p-1"></i> @(Language.GetCurrentLang() == "en" ? @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE_E: @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE) <a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-warning btn-sm mr-1" target="_blank"><i class="fa fa-external-link-alt"></i></a><a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-primary details btn-sm mr-1" download><i class="fa fa-download"></i></a> <span id="deletfile"><a href="" id="@listFiles.FILE_CODE" class="float-left btn-danger btn-sm"><i class="fa fa-trash"></i></a></span></div>
                                                        </div>
                                                    }



                                                    {
                                                        a[x] = listFiles.FILE_TYPE;
                                                        x++;
                                                    }
                                                    <span style="display:none" id="ff_@listFiles.FILE_TYPE">@listFiles.FILE_TYPE</span>

                                                }

                                            }

                                            if (ViewBag.PASS_FILES != ViewBag.GetFiles.Count)
                                            {
                                                <div class="col-md-12 p-4">
                                                    <h5>
                                                        <i class="fa fa-file-alt"></i>
                                                        @Resources.Passes.ResourceManager.GetString("documents_not_fit" + "_" + ViewBag.lang)
                                                    </h5>
                                                </div>


                                                foreach (var fileType in ViewBag.PASS_FILES_2)
                                                {



                                                    var json = JsonConvert.SerializeObject(fileType, Formatting.Indented);
                                                    var json2 = @"[" + json + "]";
                                                    var data = JsonConvert.DeserializeObject<List<dynamic>>(json2);
                                                    int k = Convert.ToInt32(data[0].FILE_TYPE_CODE);
                                                    if (!a.ToList().Contains(k))
                                                    {


                                                        <div class="col-md-12">
                                                            <div class="btn btn-outline-danger mt-1 btn-block"><i class="fa fa-exclamation-triangle p-1"></i> @(Language.GetCurrentLang() == "en" ? data[0].FILE_TYPE_E : data[0].FILE_TYPE)</div>
                                                        </div>



                                                    }

                                                }
                                            }
                                        }
                                        @if (ViewBag.GetFiles.Count == 0)
                                        {
                                            <div class="col-md-12">
                                                <div class="alert alert-danger"><i class="fa fa-exclamation"></i> @Resources.Passes.ResourceManager.GetString("documents_not_complete" + "_" + ViewBag.lang)</div>
                                            </div>
                                        }

                                    </div>
                                    @*<div class="col-12"><hr /></div>
                        <br />*@


                                    <div class="col-12"><hr /></div>
                                }


                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("PURPOSE_OF_PASS" + "_" + ViewBag.lang)
                                        @Html.TextAreaFor(model => model.PURPOSE_OF_PASS, new { @class = "form-control", @ReadOnly = true })
                                        @Html.ValidationMessageFor(model => model.PURPOSE_OF_PASS, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Remarks" + "_" + ViewBag.lang)
                                        @Html.TextAreaFor(model => model.REMARKS, new { @class = "form-control", @ReadOnly = true })
                                        @Html.ValidationMessageFor(model => model.REMARKS, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                if (ViewBag.RESPO_STATE == 4)
                                {

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Resources.Passes.ResourceManager.GetString("Barcode" + "_" + ViewBag.lang)
                                            @if (Model.BARCODE != null)
                                            {
                                                <input class="form-control text-box single-line"
                                                       value="@Model.BARCODE"
                                                       name="BARCODE" type="hidden" readonly />
                                                <br />
                                            }
                                            else
                                            {
                                                <input class="form-control text-box single-line"
                                                       value="@barcode"
                                                       name="BARCODE" type="hidden" readonly />
                                                <br />
                                            }
                                            <img id="barcode3" />
                                            @Html.ValidationMessageFor(model => model.BARCODE, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                }
                            }







                            <div class="col-md-12">
                                <h4>
                                    @Resources.Passes.ResourceManager.GetString("Comments" + "_" + ViewBag.lang)
                                </h4>

                                <div class="form-group">
                                    <label class="control-label">
                                        @Resources.Passes.ResourceManager.GetString("Add_comment" + "_" + ViewBag.lang)
                                    </label>
                                    <textarea name="COMMENT" class="form-control"></textarea>
                                </div>
                            </div>
                            @if (ViewBag.COMMENTS != null)
                            {

                                foreach (var comment in ViewBag.COMMENTS)
                                {
                                    <div class="col-md-12">
                                        <div class="form-group">

                                            <div class="card-body" style="background: #c8d0d1; border-radius:5px;">
                                                <p class="bg-white p-1 rounded">
                                                    @{

                                                        string name = Resources.Passes.ResourceManager.GetString("Autho_type" + "_" + ViewBag.lang) + ": " + (new UserInfo()).WorkFlowType(comment.CRD_BY) + " - " + (new UserInfo()).FULL_NAME(comment.CRD_BY);

                                                        @name

                                                    }
                                                    - @Resources.Passes.ResourceManager.GetString("Crd_comment_date" + "_" + ViewBag.lang) - @comment.CRD_DT

                                                </p>
                                                <br />
                                                @comment.COMMENT
                                            </div>
                                        </div>
                                    </div>
                                }
                            }







                            <div class="col-md-12">

                                <div class="form-group @align">
                                    @if (ViewBag.STATUS == true)
                                    {

                                        if (ViewBag.RESPO_STATE != 0)
                                        {
                                            if (ViewBag.RESPO_STATE != 1)
                                            {
                                                <button type="submit" value="Approve" class="btn btn-success" name="approvebtn">
                                                    <i class="fa fa-check-circle"></i>
                                                    @Resources.Common.ResourceManager.GetString("approve" + "_" + ViewBag.lang)
                                                </button>
                                            }
                                        }
                                    }

                                    else
                                    {
                                        if (ViewBag.RESPO_STATE == 7 || ViewBag.RESPO_STATE == 3 || ViewBag.RESPO_STATE == 4)
                                        {

                                            <button type="submit" value="Reject" class="btn btn-danger" name="rejectbtn">
                                                <i class="fa fa-minus-circle"></i>
                                                @Resources.Common.ResourceManager.GetString("reject" + "_" + ViewBag.lang)

                                            </button>

                                            <button type="submit" value="Approve" class="btn btn-success" name="approvebtn">
                                                <i class="fa fa-check-circle"></i>
                                                @Resources.Common.ResourceManager.GetString("approve" + "_" + ViewBag.lang)
                                            </button>
                                        }

                                        if (ViewBag.RESPO_STATE == 1)
                                        {
                                            if (Model.REJECTED == true)
                                            {
                                                <button type="submit" value="Approve" class="btn btn-success" name="approvebtn">
                                                    <i class="fa fa-check-circle"></i>
                                                    @Resources.Common.ResourceManager.GetString("approve" + "_" + ViewBag.lang)
                                                </button>
                                            }
                                        }



                                    }
                                </div>


                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

</div>








@section Scripts
{
    <link href="~/Content/select2.min.css" rel="stylesheet" />
    <script src="~/Scripts/select2.min.js"></script>
    <link href="~/Content/Kendo/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="~/Content/Kendo/styles/kendo.default.min.css" rel="stylesheet" />
    <script src="~/Scripts/Kendo/js/kendo.all.min.js"></script>
    <script>
        $(document).ready(function () {
            showProgressBar($(".service-number-field"));
            showServiceInfo($(".service-number-field"));
            AddFiles();

            $("#COMPANYCODE").kendoComboBox({
                                    filter: "contains",
                                            change: function(e) {
                                            var widget = e.sender;

                                            if (widget.value() && widget.select() === -1)
                                            {
                                                //custom has been selected
                                                widget.value(""); //reset widget
                                                                  //widget.trigger("change");
                                            }
                                        }
                                    });
           


                                        $('#deletfile a').click(function(e) {
                                        e.preventDefault();

                                        var id = $(this).attr("Id");

                                        var MSG = confirm("@Resources.Passes.ResourceManager.GetString("File_confirm_delete" + "_" + ViewBag.lang)");

                                        if (MSG)
                                        {

                                                $.ajax({
                                            type: "POST",
                                                    url: '@Url.Action("DeleteFile")',
                                                    data: { id: id },
                                                    dataType: "json",
                                                    success: function() {
                                                    setTimeout(function() { location.reload(); }, 1);
                                                },
                                                    error: function() {
                                                    alert("@Resources.Passes.ResourceManager.GetString("Error_delete_file" + "_" + ViewBag.lang)");
                                                }
                                            });
                                        }
                                    })

                                        $('#deletzone a').click(function(e) {
                                        e.preventDefault();

                                        var id = $(this).attr("Id");

                                        var MSG = confirm("@Resources.Passes.ResourceManager.GetString("Area_confirm_delete" + "_" + ViewBag.lang)");

                                        if (MSG)
                                        {

                                                $.ajax({
                                            type: "POST",
                                                    url: '@Url.Action("DeleteZone")',
                                                    data: { id: id },
                                                    dataType: "json",
                                                    success: function() {
                                                    setTimeout(function() { location.reload(); }, 1);
                                                },
                                                    error: function() {
                                                    alert("@Resources.Passes.ResourceManager.GetString("Error_delete_area" + "_" + ViewBag.lang)");
                                                }
                                            });
                                        }
                                    })


             $("#CARD_EXPIRED_DATE").kendoDatePicker({
                format: "dd/MM/yyyy"
            });
           

            $(function () {
                var dateToday = new Date();
                var yrRange = dateToday.getFullYear() + ":" + (dateToday.getFullYear() + 2);
                $("#DATE_FROM").datepicker({
                    //minDate: 0,
                    dateFormat: "dd/mm/yy",
                    yearRange: yrRange,
                    changeMonth: true,
                    numberOfMonths: 1,
                    changeYear: true,
                    onClose: function (selectedDate, inst) {
                        var minDate = new Date(Date.parse(selectedDate));
                        //minDate.setDate(maxDate.getDate() + 1);
                        $("#DATE_TO").datepicker("option", "minDate", selectedDate);
                    }
                });

                $("#DATE_TO").datepicker({
                    minDate: "+1D",
                    dateFormat: "dd/mm/yy",
                    yearRange: yrRange,
                    changeMonth: true,
                    numberOfMonths: 1,
                    changeYear: true,
                    onClose: function (selectedDate, inst) {
                        var maxDate = new Date(Date.parse(selectedDate));
                        //maxDate.setDate(maxDate.getDate() - 1);
                        //$("#DATE_FROM").datepicker("option", "maxDate", maxDate);
                    }
                });
            });

            $("#IDENTITY").kendoComboBox({
                filter: "contains",
                change: function (e) {
                    var widget = e.sender;

                    if (widget.value() && widget.select() === -1) {
                        //custom has been selected
                        widget.value(""); //reset widget
                        //widget.trigger("change");
                    }
                }
            });
            $("#GENDER").kendoComboBox({
                filter: "contains",
                change: function (e) {
                    var widget = e.sender;

                    if (widget.value() && widget.select() === -1) {
                        //custom has been selected
                        widget.value(""); //reset widget
                        //widget.trigger("change");
                    }
                }
            });
            $("#PASSTYPECODE").kendoComboBox({
                filter: "contains",
                change: function (e) {
                    var widget = e.sender;

                    if (widget.value() && widget.select() === -1) {
                        //custom has been selected
                        widget.value(""); //reset widget
                        //widget.trigger("change");
                    }
                }
            });

              $('#deletImage a').click(function (e) {
            e.preventDefault();

            var id = $(this).attr("Id");

            var MSG = confirm("@Resources.Passes.ResourceManager.GetString("File_confirm_delete" + "_" + ViewBag.lang)");

            if (MSG) {

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DeleteImage")',
                    data: { id: id },
                    dataType: "json",
                    success: function () {
                        setTimeout(function () { location.reload(); }, 1);
                    },
                    error: function () {
                        alert("@Resources.Passes.ResourceManager.GetString("Error_delete_file" + "_" + ViewBag.lang)");
                    }
                });
            }
            })



        });




         function showpreview(input) {

            if (input.files && input.files[0]) {

                var val = $(input).val().toLowerCase(),
                    regex = new RegExp("(.*?)\.(gif|jpg|jpeg|JPEG|GIF|JPG)$");

                if (!(regex.test(val))) {
                    $(input).val('');
                    $('#imagePreview').css('display', 'none');

                    alert('@no_file_format');

                }
                else {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#imagePreview').css('display', 'inline');
                        $('#imagePreview').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }
        }

    </script>

    <script>






        function AddFiles() {
            //Build an array containing Customer records.


                var file_types = JSON.parse('@Html.Raw(Json.Encode(ViewBag.FILE_TYPES))');



                //Reference the container DIV.
                var fContainer = document.getElementById("fContainer")
                //Add  to DIV.
                var div = document.createElement("DIV");
                div.className = "bg-light p-2 rounded";
                div.id = "file_div";




                //Add the Options to the DropDownList.
                for (var i = 0; i < file_types.length; i++) {
                    //Create  element.
                    var f_id = "#ff_" + file_types[i].Value;
                    var ff = $(f_id).text();
                    console.log(ff);
                    if (ff != file_types[i].Value) {
                        var val = file_types[i].Text.split(/-(.*)/)[1];
                        console.log(val);
                        var val2 = file_types[i].Text.replace(/\-.*/g, "$'");



                        var files = document.createElement("INPUT");
                        files.name = "files";
                        files.type = "file";
                        files.id = "file_" + file_types[i].Value + "_" + val;
                        files.className = "form-control m-1";
                        files.onchange = function () { setFileType(this.id); };


                        var label = document.createElement("label");
                        //Set file Name in Text part.
                        label.htmlFor = "file_types_text" + i;
                        label.appendChild(document.createTextNode(val2));

                        var div_after = document.createElement("DIV");
                        div_after.id = "lbl" + file_types[i].Value;
                        var br2 = document.createElement("br");

                        //div.appendChild(file_types_codes);
                        div.appendChild(label);
                        div.appendChild(files);
                        div.appendChild(div_after);
                        div.appendChild(br2);
                        fContainer.appendChild(div);
                    }

                }


        }

        function setFileType(id) {
            console.log(id);
            var file_id = id.split('_')[1];
            console.log(file_id);
            var val = id.split('_')[2];
            console.log(val);

            var file_types_codes = document.createElement("INPUT");
            file_types_codes.type = "text";
            file_types_codes.name = "FILE_TYPES[]";
            file_types_codes.value = file_id;
            file_types_codes.hidden = true;
            var fContainer = document.getElementById("fContainer");
            fContainer.appendChild(file_types_codes);


            var file_types_text = document.createElement("INPUT");
            file_types_text.type = "text";
            file_types_text.name = "FILE_TYPES_TEXT[]";
            file_types_text.autocomplete = "off";
            file_types_text.placeholder = "@Resources.Settings.ResourceManager.GetString("REMARKS" + "_" + ViewBag.lang)";
            file_types_text.className = "col-md-12 form-control mr-1";


                    if (val == 1) {
                        file_types_text.placeholder = "@Resources.Passes.ResourceManager.GetString("worker_id_card_expaired" + "_" + ViewBag.lang)";
                        file_types_text.className = "col-md-12 form-control mr-1 datepicker_recurring_start";
                        var dateToday = new Date();
                        var yrRange = dateToday.getFullYear() + ":" + (dateToday.getFullYear() + 8);

                        $('body').on('focus', ".datepicker_recurring_start", function () {
                            $(this).datepicker(
                                {
                                dateFormat: "dd/mm/yy",
                                yearRange: yrRange,
                                changeMonth: true,
                                numberOfMonths: 1,
                                changeYear: true,
                            }
                            );
                        });

            }
            var z = "lbl" + file_id;
            var file_div = document.getElementById(z);
            file_div.appendChild(file_types_text);


        }



    </script>
    <!--<script>




        var w = 0;
            function AddPerson() {
                document.getElementById("employees").checked = true;

            //Build an array containing Customer records.
            w++;
            if (w < 11) {
                var identity_types = JSON.parse('@Html.Raw(Json.Encode(ViewBag.IDENTITY_CODE))');
                var pass_types = JSON.parse('@Html.Raw(Json.Encode(ViewBag.PASS_TYPE_CODE))');-->
    @*var file_types = JSON.parse('@Html.Raw(Json.Encode(ViewBag.FILE_TYPES))');*@
    <!--var gender_types = JSON.parse('@Html.Raw(Json.Encode(ViewBag.GENDER_ID))');
    //Create a DropDownList element.
    var work_card_number = document.createElement("INPUT");
    var id_card_number = document.createElement("INPUT");
    var work_card_expired_date = document.createElement("INPUT");
    var name_a = document.createElement("INPUT");
    var name_e = document.createElement("INPUT");
    var profession_a = document.createElement("INPUT");
    var profession_e = document.createElement("INPUT");
    var work_place = document.createElement("INPUT");
    var gsm = document.createElement("INPUT");
    var address = document.createElement("INPUT");
    var date_from = document.createElement("INPUT");
    var date_to = document.createElement("INPUT");
    var image = document.createElement("IMG");
    var imagediv = document.createElement("DIV");
    var img = document.createElement("INPUT");
    var lbl = document.createElement("LABEL");
    var lbl1 = document.createElement("LABEL");
    var lbl2 = document.createElement("LABEL");
    var lbl3 = document.createElement("LABEL");
    var lbl4 = document.createElement("LABEL");
    var lbl5 = document.createElement("LABEL");
    lbl.innerText = "@Resources.Passes.ResourceManager.GetString("Personal_image" + "_" + ViewBag.lang)";
    lbl1.innerText = "@Resources.Passes.ResourceManager.GetString("Identity" + "_" + ViewBag.lang)";
    lbl2.innerText = "@Resources.Passes.ResourceManager.GetString("Gender" + "_" + ViewBag.lang)";
    lbl3.innerText = "@Resources.Passes.ResourceManager.GetString("Pass_type" + "_" + ViewBag.lang)";
    lbl4.innerText = "@Resources.Passes.ResourceManager.GetString("Employee_Num" + "_" + ViewBag.lang)" + w;
    lbl5.innerText = "@Resources.Passes.ResourceManager.GetString("Duration" + "_" + ViewBag.lang)";
    lbl.className = "ml-2";
    lbl1.className = "ml-2";
    lbl2.className = "ml-2";
    lbl3.className = "ml-2";
    lbl4.className = "text-white font-weight-bold bg-dark p-2 rounded";

    image.id = "imagePreview_" + w;
    image.width = "100";
    imagediv.className = "col-md-12 m-1";


    img.name = "PERSONAL_IMAGE";
    img.type = "file";
    img.id =  w;
    img.className = "form-control col-md-4 m-1";
    img.onchange = function () { showpreview(this); };

    work_card_number.name = "WORK_CARD_NUMBER[]";
    work_card_number.type = "text";
    work_card_number.id = "work_card_number" + w;
    work_card_number.placeholder = "@Resources.Passes.ResourceManager.GetString("worker_id_card" + "_" + ViewBag.lang)";
    work_card_number.className = "form-control col-md-4 m-1";
    work_card_number.hidden = true;

    id_card_number.name = "ID_CARD_NUMBER[]";
    id_card_number.type = "text";
    id_card_number.id = "id_card_number" + w;
    id_card_number.placeholder = "@Resources.Passes.ResourceManager.GetString("worker_identity_card" + "_" + ViewBag.lang)";
    id_card_number.className = "form-control col-md-4 m-1";
    id_card_number.required = true;

    work_card_expired_date.name = "CARD_EXPIRED_DATE[]";
    work_card_expired_date.type = "text";
    work_card_expired_date.className = "form-control col-md-4 w-100 m-1";
    work_card_expired_date.id = "work_card_expired_date" + w;
    work_card_expired_date.placeholder = "@Resources.Passes.ResourceManager.GetString("worker_id_card_expaired" + "_" + ViewBag.lang)";
    work_card_expired_date.required = true;

    name_a.name = "NAME_A[]";
    name_a.type = "text";
    name_a.id = "namea" + w;
    name_a.placeholder = "@Resources.Passes.ResourceManager.GetString("worker_namea" + "_" + ViewBag.lang)";
    name_a.className = "form-control col-md-4 m-1";
    name_a.required = true;


    name_e.name = "NAME_E[]";
    name_e.type = "text";
    name_e.id = "namee" + w;
    name_e.placeholder = "@Resources.Passes.ResourceManager.GetString("worker_namee" + "_" + ViewBag.lang)";
    name_e.className = "form-control col-md-4 m-1";
    name_e.required = true;


    profession_a.name = "PROFESSION_A[]";
    profession_a.type = "text";
    profession_a.id = "professiona" + w;
    profession_a.placeholder = "@Resources.Passes.ResourceManager.GetString("Proffision_a" + "_" + ViewBag.lang)";
    profession_a.className = "form-control col-md-4 m-1";
    profession_a.required = true;


    profession_e.name = "PROFESSION_E[]";
    profession_e.type = "text";
    profession_e.id = "professione" + w;
    profession_e.placeholder = "@Resources.Passes.ResourceManager.GetString("Proffision_e" + "_" + ViewBag.lang)";
    profession_e.className = "form-control col-md-4 m-1";
    profession_e.required = true;


    work_place.name = "WORK_PLACE[]";
    work_place.type = "text";
    work_place.id = "workplace" + w;
    work_place.placeholder = "@Resources.Passes.ResourceManager.GetString("work_place" + "_" + ViewBag.lang)";
    work_place.className = "form-control col-md-4 m-1";
    work_place.required = true;


    gsm.name = "GSM[]";
    gsm.type = "number";
    gsm.id = "gsm" + w;
    gsm.placeholder = "@Resources.Passes.ResourceManager.GetString("Gsm" + "_" + ViewBag.lang)";
    gsm.className = "form-control col-md-4 m-1";
    gsm.required = true;


    address.name = "ADDRESS[]";
    address.type = "text";
    address.id = "address" + w;
    address.placeholder = "@Resources.Passes.ResourceManager.GetString("address" + "_" + ViewBag.lang)";
    address.className = "form-control col-md-4 m-1";


    date_from.name = "DATE_FROM[]";
    date_from.type = "text";
    date_from.id = "date_from" + w;
    date_from.placeholder = "@Resources.Passes.ResourceManager.GetString("Property_issued" + "_" + ViewBag.lang)";
    //date_from.className = "m-3";
    date_from.required = true;


    date_to.name = "DATE_TO[]";
    date_to.type = "text";
    date_to.id = "date_to" + w;
    date_to.placeholder = "@Resources.Passes.ResourceManager.GetString("Property_expired" + "_" + ViewBag.lang)";
    //date_to.className = "w-25";
    date_to.required = true;




    //var file_types_codes = document.createElement("SELECT");
    //file_types_codes.name = "FILES[]";
    //file_types_codes.id = "file_types" + w;
    //file_types_codes.className = "form-control m-1";

    var pass_types_codes = document.createElement("SELECT");
    pass_types_codes.name = "PASS_TYPE_CODE[]";
    pass_types_codes.id = "pass_types" + w;
    pass_types_codes.className = "";

    var identity_types_codes = document.createElement("SELECT");
    identity_types_codes.name = "IDENTITY_CODE[]";
    identity_types_codes.id = "identity_types" + w;
    identity_types_codes.className = "ml-2";

    var gender_types_codes = document.createElement("SELECT");
    gender_types_codes.name = "GENDER[]";
    gender_types_codes.id = "gender_types" + w;
    gender_types_codes.className = "ml-2";

    //Add the Options to the DropDownList.
    //for (var i = 0; i < file_types.length; i++) {
    //    var option = document.createElement("OPTION");

    //    //Set Customer Name in Text part.
    //    option.innerHTML = file_types[i].Text;

    //    //Set CustomerId in Value part.
    //    option.value = file_types[i].Value;

    //    //Add the Option element to DropDownList.
    //    file_types_codes.options.add(option);

    //}

    //Add the Options to the DropDownList.
    for (var i = 0; i < pass_types.length; i++) {
        var option = document.createElement("OPTION");

        //Set Customer Name in Text part.
        option.innerHTML = pass_types[i].Text;

        //Set CustomerId in Value part.
        option.value = pass_types[i].Value;

        //Add the Option element to DropDownList.
        pass_types_codes.options.add(option);

    }

    //Add the Options to the DropDownList.
    for (var i = 0; i < identity_types.length; i++) {
        var option = document.createElement("OPTION");

        //Set Customer Name in Text part.
        option.innerHTML = identity_types[i].Text;

        //Set CustomerId in Value part.
        option.value = identity_types[i].Value;

        //Add the Option element to DropDownList.
        identity_types_codes.options.add(option);

    }

    //Add the Options to the DropDownList.
    for (var i = 0; i < gender_types.length; i++) {
        var option = document.createElement("OPTION");

        //Set Customer Name in Text part.
        option.innerHTML = gender_types[i].Text;

        //Set CustomerId in Value part.
        option.value = gender_types[i].Value;

        //Add the Option element to DropDownList.
        gender_types_codes.options.add(option);

    }


    //Reference the container DIV.
    var mContainer = document.getElementById("PrContainer")
    var br = document.createElement("br");
    var br1 = document.createElement("br");
    var br2 = document.createElement("br");
    var br3 = document.createElement("br");
    var br4 = document.createElement("br");

    //Add the DropDownList to DIV.
    var div = document.createElement("DIV");
    div.className = "bg-light p-4 m-2 rounded ";
    var row = document.createElement("DIV");
    row.className = "row";
    div.appendChild(lbl4);
    div.appendChild(br2);
    div.appendChild(lbl1);
    div.appendChild(identity_types_codes);
    div.appendChild(lbl2);
    div.appendChild(gender_types_codes);
    div.appendChild(lbl3);
    div.appendChild(pass_types_codes);
    div.appendChild(row);
    row.appendChild(id_card_number);
    row.appendChild(work_card_number);
    row.appendChild(work_card_expired_date);
    row.appendChild(name_a);
    row.appendChild(name_e);
    row.appendChild(profession_a);
    row.appendChild(profession_e);
    row.appendChild(work_place);
    div.appendChild(lbl);
    div.appendChild(img);
    div.appendChild(image);
    div.appendChild(imagediv);
    row.appendChild(gsm);
    row.appendChild(address);
    div.appendChild(lbl5);
    div.appendChild(br3);
    div.appendChild(date_from);
    div.appendChild(br);
    div.appendChild(date_to);
    div.appendChild(br1);

    mContainer.appendChild(div);
    //Create a Remove Button.
    var btnRemove = document.createElement("INPUT");
    btnRemove.value = "@remove";
    btnRemove.type = "button";
    btnRemove.className = "btn btn-danger btn-sm m-1";
    btnRemove.onclick = function () {
        mContainer.removeChild(this.parentNode);
        pass_types_codes.remove(this.parentNode);
        identity_types_codes.remove(this.parentNode);
        gender_types_codes.remove(this.parentNode);
        id_card_number.remove(this.parentNode);
        work_card_number.remove(this.parentNode);
        name_a.remove(this.parentNode);
        name_e.remove(this.parentNode);
        profession_a.remove(this.parentNode);
        profession_e.remove(this.parentNode);
        work_place.remove(this.parentNode);
        gsm.remove(this.parentNode);
        address.remove(this.parentNode);
        date_from.remove(this.parentNode);
        date_to.remove(this.parentNode);
        img.remove(this.parentNode);
        lbl.remove(this.parentNode);
        lbl1.remove(this.parentNode);
        lbl2.remove(this.parentNode);
        lbl3.remove(this.parentNode);
        lbl4.remove(this.parentNode);
        lbl5.remove(this.parentNode);


    };


    //Add the Remove Buttton to DIV.
    div.appendChild(btnRemove);





    //$("#date_from" + w).kendoDatePicker({
    //    format: "dd/MM/yyyy"
    //});
    //$("#date_to" + w).kendoDatePicker({
    //    format: "dd/MM/yyyy"
    //});

    $(function () {
        $("#date_from" +w).datepicker({
            //minDate: 0,
            dateFormat: "dd/mm/yy",
            yearRange: '2020:2100',
            changeMonth: true,
            numberOfMonths: 1,
            changeYear: true,
            onClose: function (selectedDate, inst) {
                var minDate = new Date(Date.parse(selectedDate));
                //minDate.setDate(maxDate.getDate() + 1);
                $("#date_to"+w).datepicker("option", "minDate", selectedDate);
            }
        });

        $("#date_to"+w).datepicker({
            minDate: "+1D",
            dateFormat: "dd/mm/yy",
            yearRange: '2020:2100',
            changeMonth: true,
            numberOfMonths: 1,
            changeYear: true,
            onClose: function (selectedDate, inst) {
                var maxDate = new Date(Date.parse(selectedDate));
                maxDate.setDate(maxDate.getDate() - 1);
                $("#date_from"+w).datepicker("option", "maxDate", maxDate);
            }
        });
    });
    $("#work_card_expired_date" + w).kendoDatePicker({
        format: "dd/MM/yyyy"
    });
    $("#pass_types" + w).kendoComboBox({
        filter: "contains"
    });
    $("#identity_types" + w).kendoComboBox({
        filter: "contains"
    });
    $("#gender_types" + w).kendoComboBox({
        filter: "contains"
    });-->
    @*$(function () {
        $('input[type=file]').change(function () {
            var val = $(this).val().toLowerCase(),
                regex = new RegExp("(.*?)\.(gif|jpg|jpeg|JPEG|GIF|JPG)$");

            if (!(regex.test(val))) {
                $(this).val('');
                alert('@no_file_format');
            }
            });
        });*@

    <!--} else {
                alert('@no_persons')
            }
        };



      function showpreview(input) {

          console.log(input.id);
          var id = "#imagePreview_" + input.id;
            if (input.files && input.files[0]) {

                var val = $(input).val().toLowerCase(),
                    regex = new RegExp("(.*?)\.(gif|jpg|jpeg|JPEG|GIF|JPG)$");

                if (!(regex.test(val))) {

                        $(input).val('');
                    $(id).css('display', 'none');


                        alert('@no_file_format');


                }
                else {
                    var reader = new FileReader();
                    reader.onload = function (e) {

                            $(id).css('display', 'inline');
                        $(id).attr('src', e.target.result);


                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }
        }


    </script>-->

    <script src="@Url.Content("~/Scripts/JsBarcode.all.js")"></script>
    <script>
        JsBarcode("#barcode3", "@barcode", {
            format: "code39",
            displayValue: false,
            fontSize: 20,
            height: 20,
            width:1

        });
    </script>


}
