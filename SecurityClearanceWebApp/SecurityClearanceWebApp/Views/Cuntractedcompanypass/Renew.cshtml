@using Newtonsoft.Json;
@using portal.Controllers;
@using SecurityClearanceWebApp.Models;
@using APP.Util;
@model SecurityClearanceWebApp.Models.RA42_CONTRACTING_COMPANIES_PASS_DTL

@{
    ViewBag.Title = "Renew";
    string align = "text-right";
    string alignInverse = "text-left";
    string dir = "ltr";
    var flt = "left";
    if (ViewBag.lang == "ar")
    {
        align = "text-left";
        alignInverse = "text-right";
        dir = "rtl";
        flt = "right";

    }


    var agree = Resources.Common.ResourceManager.GetString("error_agree" + "_" + ViewBag.lang);
    var main_z = Resources.Passes.ResourceManager.GetString("main_zone" + "_" + ViewBag.lang);
    var sub_z = Resources.Passes.ResourceManager.GetString("sub_zone" + "_" + ViewBag.lang);
    var remove = Resources.Passes.ResourceManager.GetString("Remove" + "_" + ViewBag.lang);
    var all = Resources.Passes.ResourceManager.GetString("All" + "_" + ViewBag.lang);
    var choose_sub_z = Resources.Passes.ResourceManager.GetString("choose_sub_zone_again" + "_" + ViewBag.lang);
    var no_file_ = Resources.Passes.ResourceManager.GetString("not_allowed_m_ten" + "_" + ViewBag.lang);
    var no_zone_ = Resources.Passes.ResourceManager.GetString("not_allowed_m_50" + "_" + ViewBag.lang);
    var no_file_format = Resources.Passes.ResourceManager.GetString("file_format" + "_" + ViewBag.lang);
    var doc = Resources.Passes.ResourceManager.GetString("document_type" + "_" + ViewBag.lang);
    var no_persons = Resources.Passes.ResourceManager.GetString("Not_allowed_50_person" + "_" + ViewBag.lang);
    var relative = Resources.Passes.ResourceManager.GetString("Relative_type" + "_" + ViewBag.lang);
    var civil_num = Resources.Passes.ResourceManager.GetString("Civil_number" + "_" + ViewBag.lang);
    var identity = Resources.Passes.ResourceManager.GetString("Identity" + "_" + ViewBag.lang);
    var gender = Resources.Passes.ResourceManager.GetString("Gender" + "_" + ViewBag.lang);
    var documents = Resources.Passes.ResourceManager.GetString("Documents" + "_" + ViewBag.lang);
    var expired = Resources.Common.ResourceManager.GetString("expired" + "_" + ViewBag.lang);
    var countinue = Resources.Common.ResourceManager.GetString("countinue" + "_" + ViewBag.lang);
    var controller = "Mypasses";

    string barcode = Guid.NewGuid().ToString().Substring(0, 5);
    var col = 12;
    var required = Resources.Common.ResourceManager.GetString("required" + "_" + ViewBag.lang);


}



<div class="container-fluid" dir="@dir">
    <div class="row">

        @if (ViewBag.RESPO_STATE > 1 || ViewBag.ADMIN == true || ViewBag.DEVELOPER == true)
        {
            @Html.Partial("Index")
        }


        <div class="col-md-12">

            <div class="card shadow-sm">

                <div class="card-header text-primary">
                    <h5>
                        <i class="fa fa-paste"></i>
                        @Resources.Common.ResourceManager.GetString("Renew" + "_" + ViewBag.lang)
                    </h5>
                </div>

                <div class="card-body">
                    <div class="row">
                        <div class="col-md-12 @align">
                            <a href="#" onclick="history.back()" class="btn btn-outline-dark">
                                <i class="fa fa-backward"></i>
                                @Resources.Passes.ResourceManager.GetString("back" + "_" + ViewBag.lang)
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @{
                        if (TempData["Success"] != null)
                        {
                            <p class="alert alert-success">@TempData["Success"]</p>
                        }
                        if (TempData["Erorr"] != null)
                        {
                            <p class="alert alert-danger">@TempData["Erorr"]</p>
                        }
                      
                    }
                    @using (Html.BeginForm("Renew", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                <div class="row">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <input type="hidden" value="@Model.CONTRACT_CODE" name="CONTRACT_ID" />

                    <div class="col-md-12">


                        <div class="form-group">


                            <div class="card ">
                                <div class="card-header">@Resources.Passes.ResourceManager.GetString("Personal_image" + "_" + ViewBag.lang)</div>
                                <div class="row p-4">

                                    <div class="col-2 text-center bg-light p-2">
                                        <img src="~/Files/Profiles/@Model.PERSONAL_IMAGE" onerror="this.onerror = null; this.src='@Url.Content("~/Content/images/adminpic.png")'" alt="user image" width="100" height="100">
                                        @if (Model.PERSONAL_IMAGE != null)
                                        {
                                            <span id="deletImage"><a href="" id="@Model.CONTRACT_CODE" class="btn-sm btn-danger"><i class="fa fa-times-circle"></i> </a></span>
                                        }
                                    </div>

                                </div>
                            </div>
                        </div>
                        <br />
                    </div>



                    <div class="col-md-6">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("respo_unit" + "_" + ViewBag.lang)
                            @Html.EditorFor(model => model.RESPONSIBLE, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RESPONSIBLE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("company_name" + "_" + ViewBag.lang)

                            @Html.DropDownList("COMPANY_CODE", null, htmlAttributes: new { @class = "form-control", id = "COMPANYCODE", @Style = "width:100%" })
                            @Html.ValidationMessageFor(model => model.COMPANY_CODE, "", new { @class = "text-danger" })
                        </div>
                    </div>




                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("worker_identity_card" + "_" + ViewBag.lang)
                            @Html.EditorFor(model => model.ID_CARD_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ID_CARD_NUMBER, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("worker_id_card_expaired" + "_" + ViewBag.lang)
                            @Html.EditorFor(model => model.CARD_EXPIRED_DATE, new { htmlAttributes = new { @class = "form-control", @Style = "width:100%;", onkeydown = "javascript: return false;" } })
                            @Html.ValidationMessageFor(model => model.CARD_EXPIRED_DATE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("worker_namea" + "_" + ViewBag.lang)
                            @Html.EditorFor(model => model.NAME_A, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NAME_A, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("worker_namee" + "_" + ViewBag.lang)
                            @Html.EditorFor(model => model.NAME_E, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NAME_E, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Proffision_a" + "_" + ViewBag.lang)
                            @Html.EditorFor(model => model.PROFESSION_A, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PROFESSION_A, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Proffision_e" + "_" + ViewBag.lang)
                            @Html.EditorFor(model => model.PROFESSION_E, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PROFESSION_E, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Identity" + "_" + ViewBag.lang)
                            @Html.DropDownList("IDENTITY_CODE", null, htmlAttributes: new { @class = "form-control", id = "IDENTITY", @Style = "width:100%" })
                            @Html.ValidationMessageFor(model => model.IDENTITY_CODE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Gender" + "_" + ViewBag.lang)

                            @Html.DropDownList("GENDER_ID", null, htmlAttributes: new { @class = "form-control", id = "GENDER", @Style = "width:100%" })
                            @Html.ValidationMessageFor(model => model.GENDER_ID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="row">
                            <div class="col-md-11">
                                <div class="form-group">
                                    @Resources.Passes.ResourceManager.GetString("Personal_image" + "_" + ViewBag.lang)
                                    <input type="file" name="PERSONAL_IMAGE" accept="image/*" class="form-control" onchange="showpreview(this);" />
                                    @Html.ValidationMessageFor(model => model.PERSONAL_IMAGE, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-1 p-2">
                                <img src="~/Content/images/adminpic.png" style="display: none;" width="50" height="50" id="imagePreview" />
                            </div>
                        </div>

                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Pass_type" + "_" + ViewBag.lang)
                            @Html.DropDownList("PASS_TYPE_CODE", null, htmlAttributes: new { @class = "form-control", id = "PASSTYPECODE", @Style = "width:100%" })
                            @Html.ValidationMessageFor(model => model.PASS_TYPE_CODE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("work_place" + "_" + ViewBag.lang)

                            @Html.EditorFor(model => model.WORK_PLACE, new { htmlAttributes = new { @class = "form-control" } })


                            @Html.ValidationMessageFor(model => model.WORK_PLACE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("address" + "_" + ViewBag.lang)
                            @Html.EditorFor(model => model.ADDRESS, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ADDRESS, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Gsm" + "_" + ViewBag.lang)
                            @Html.EditorFor(model => model.GSM, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.GSM, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @if (ViewBag.RESPO_STATE <= 1)
                    {
                        <div class="col-md-8">
                            <div class="form-group">

                                @Resources.Passes.ResourceManager.GetString("Workflow_respo" + "_" + ViewBag.lang)


                                @Html.DropDownList("WORKFLOW_RESPO_CODE", null, htmlAttributes: new { @class = "form-control", id = "WORKFLOWRESPOCODE", @Style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.WORKFLOW_RESPO_CODE, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    <div class="col-md-12">
                        <br />
                        <div class="card">
                            <div class="card-header">
                                @Resources.Passes.ResourceManager.GetString("Duration" + "_" + ViewBag.lang)
                            </div>
                            <div class="row p-2">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Property_issued" + "_" + ViewBag.lang)
                                        @Html.EditorFor(model => model.DATE_FROM, new { htmlAttributes = new { @class = "form-control", @required = "", @Style = "width:100%;", onkeydown = "javascript: return false;", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.DATE_FROM, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Resources.Passes.ResourceManager.GetString("Property_expired" + "_" + ViewBag.lang)
                                        @Html.EditorFor(model => model.DATE_TO, new { htmlAttributes = new { @class = "form-control", @required = "", @Style = "width:100%;", onkeydown = "javascript: return false;", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.DATE_TO, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <br />
                    <div class="col-12"><hr /></div>
                    <br />




                    <div class="col-md-4">

                        <div class="col-md-12">
                            <h5 class="alert-secondary alert text-center">
                                <i class="fa fa-file-pdf p-1"></i> @documents
                            </h5>
                        </div>


                        <div class="form-group">
                            <div class="col-md-12">
                                <div id="fContainer"></div>
                            </div>
                        </div>
                    </div>


                    <div class="col-lg-8">
                        @{
                            int[] a = new int[100];
                            int x = 0;
                        }
                        @if (ViewBag.GetFiles.Count != 0)
                        {
                            foreach (var listFiles in ViewBag.GetFiles)
                            {
                                if (listFiles.FILE_TYPE != null)
                                {
                                    if (!string.IsNullOrWhiteSpace(listFiles.FILE_TYPE_TEXT))
                                    {
                                        bool check = DateTime.TryParse(listFiles.FILE_TYPE_TEXT, out DateTime dateTime);
                                        if (check == true)
                                        {
                                            var exp = countinue;
                                            var div = "alert-success";
                                            DateTime d = Convert.ToDateTime(listFiles.FILE_TYPE_TEXT);
                                            if (d < DateTime.Now)
                                            {
                                                exp = expired;
                                                div = "alert-danger";
                                            }
                                            <div class="col-md-12">
                                                <div class="btn btn-outline-dark mt-1 btn-block"><i class="fa fa-file-pdf p-1"></i> @(Language.GetCurrentLang() == "en" ? @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE_E: @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE) <span class="@div p-1 rounded">@exp | @listFiles.FILE_TYPE_TEXT </span> <a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-warning btn-sm mr-1" target="_blank"><i class="fa fa-external-link-alt"></i></a><a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-primary details btn-sm mr-1" download><i class="fa fa-download"></i></a> <span id="deletfile"><a href="" id="@listFiles.FILE_CODE" class="float-left btn-danger btn-sm"><i class="fa fa-trash"></i></a></span></div>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="col-md-12">
                                                <div class="btn btn-outline-dark mt-1 btn-block"><i class="fa fa-file-pdf p-1"></i> @(Language.GetCurrentLang() == "en" ? @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE_E: @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE) | <span class="text-primary alert-light  rounded">@listFiles.FILE_TYPE_TEXT</span> <a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-warning btn-sm mr-1" target="_blank"><i class="fa fa-external-link-alt"></i></a><a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-primary details btn-sm mr-1" download><i class="fa fa-download"></i></a> <span id="deletfile"><a href="" id="@listFiles.FILE_CODE" class="float-left btn-danger btn-sm"><i class="fa fa-trash"></i></a></span></div>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <div class="col-md-12">
                                            <div class="btn btn-outline-dark mt-1 btn-block"><i class="fa fa-file-pdf p-1"></i> @(Language.GetCurrentLang() == "en" ? @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE_E: @listFiles.RA42_FILE_TYPE_MST.FILE_TYPE) <a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-warning btn-sm mr-1" target="_blank"><i class="fa fa-external-link-alt"></i></a><a href="~/Files/Documents/@listFiles.FILE_NAME" class="float-left btn-primary details btn-sm mr-1" download><i class="fa fa-download"></i></a> <span id="deletfile"><a href="" id="@listFiles.FILE_CODE" class="float-left btn-danger btn-sm"><i class="fa fa-trash"></i></a></span></div>
                                        </div>
                                    }



                                    {
                                        a[x] = listFiles.FILE_TYPE;
                                        x++;
                                    }
                                    <span style="display:none" id="ff_@listFiles.FILE_TYPE">@listFiles.FILE_TYPE</span>

                                }

                            }

                            if (ViewBag.PASS_FILES != ViewBag.GetFiles.Count)
                            {
                                <div class="col-md-12 p-4">
                                    <h5>
                                        <i class="fa fa-file-alt"></i>
                                        @Resources.Passes.ResourceManager.GetString("documents_not_fit" + "_" + ViewBag.lang)
                                    </h5>
                                </div>


                                foreach (var fileType in ViewBag.PASS_FILES_2)
                                {



                                    var json = JsonConvert.SerializeObject(fileType, Formatting.Indented);
                                    var json2 = @"[" + json + "]";
                                    var data = JsonConvert.DeserializeObject<List<dynamic>>(json2);
                                    int k = Convert.ToInt32(data[0].FILE_TYPE_CODE);
                                    if (!a.ToList().Contains(k))
                                    {


                                        <div class="col-md-12">
                                            <div class="btn btn-outline-danger mt-1 btn-block"><i class="fa fa-exclamation-triangle p-1"></i> @(Language.GetCurrentLang() == "en" ? data[0].FILE_TYPE_E : data[0].FILE_TYPE)</div>
                                        </div>



                                    }

                                }
                            }
                        }
                        @if (ViewBag.GetFiles.Count == 0)
                        {
                            <div class="col-md-12">
                                <div class="alert alert-danger"><i class="fa fa-exclamation"></i> @Resources.Passes.ResourceManager.GetString("documents_not_complete" + "_" + ViewBag.lang)</div>
                            </div>
                        }

                    </div>



                    <div class="col-12"><hr /></div>



                    <div class="col-md-12">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("PURPOSE_OF_PASS" + "_" + ViewBag.lang)
                            @Html.TextAreaFor(model => model.PURPOSE_OF_PASS, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PURPOSE_OF_PASS, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group">
                            @Resources.Passes.ResourceManager.GetString("Remarks" + "_" + ViewBag.lang)
                            @Html.TextAreaFor(model => model.REMARKS, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.REMARKS, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @if (ViewBag.RESPO_STATE == 4)
                    {
                        <div class="col-md-4">
                            <div class="form-group">
                                @Resources.Passes.ResourceManager.GetString("Barcode" + "_" + ViewBag.lang)
                                @if (Model.BARCODE != null)
                                {
                                    <input class="form-control text-box single-line"
                                           value="@Model.BARCODE"
                                           name="BARCODE" type="hidden" readonly />
                                    <br />
                                }
                                else
                                {
                                    <input class="form-control text-box single-line"
                                           value="@barcode"
                                           name="BARCODE" type="hidden" readonly />
                                    <br />
                                }
                                <img id="barcode3" />
                                @Html.ValidationMessageFor(model => model.BARCODE, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    }
















                    <div class="col-md-12">
                        <div class="form-group @align">
                            <button type="submit" value="Renew" class="btn btn-success">
                                <i class="fa fa-paste"></i> &nbsp;
                                @Resources.Passes.ResourceManager.GetString("Renew_permit" + "_" + ViewBag.lang)
                            </button>
                        </div>
                    </div>
                </div>
                    }
                </div>
            </div>
        </div>
    </div>

</div>








@section Scripts
{
    <link href="~/Content/select2.min.css" rel="stylesheet" />
    <script src="~/Scripts/select2.min.js"></script>
    <link href="~/Content/Kendo/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="~/Content/Kendo/styles/kendo.default.min.css" rel="stylesheet" />
    <script src="~/Scripts/Kendo/js/kendo.all.min.js"></script>
    <script>
        $(document).ready(function () {
            AddFiles();

            $("#COMPANYCODE").kendoComboBox({
                                    filter: "contains",
                                            change: function(e) {
                                            var widget = e.sender;

                                            if (widget.value() && widget.select() === -1)
                                            {
                                                //custom has been selected
                                                widget.value(""); //reset widget
                                                                  //widget.trigger("change");
                                            }
                                        }
                                    });
           


                                        $('#deletfile a').click(function(e) {
                                        e.preventDefault();

                                        var id = $(this).attr("Id");

                                        var MSG = confirm("@Resources.Passes.ResourceManager.GetString("File_confirm_delete" + "_" + ViewBag.lang)");

                                        if (MSG)
                                        {

                                                $.ajax({
                                            type: "POST",
                                                    url: '@Url.Action("DeleteFile")',
                                                    data: { id: id },
                                                    dataType: "json",
                                                    success: function() {
                                                    setTimeout(function() { location.reload(); }, 1);
                                                },
                                                    error: function() {
                                                    alert("@Resources.Passes.ResourceManager.GetString("Error_delete_file" + "_" + ViewBag.lang)");
                                                }
                                            });
                                        }
                                    })

                                        $('#deletzone a').click(function(e) {
                                        e.preventDefault();

                                        var id = $(this).attr("Id");

                                        var MSG = confirm("@Resources.Passes.ResourceManager.GetString("Area_confirm_delete" + "_" + ViewBag.lang)");

                                        if (MSG)
                                        {

                                                $.ajax({
                                            type: "POST",
                                                    url: '@Url.Action("DeleteZone")',
                                                    data: { id: id },
                                                    dataType: "json",
                                                    success: function() {
                                                    setTimeout(function() { location.reload(); }, 1);
                                                },
                                                    error: function() {
                                                    alert("@Resources.Passes.ResourceManager.GetString("Error_delete_area" + "_" + ViewBag.lang)");
                                                }
                                            });
                                        }
                                    })


             $("#CARD_EXPIRED_DATE").kendoDatePicker({
                format: "dd/MM/yyyy"
            });
           

            $(function () {
                var dateToday = new Date();
                var yrRange = dateToday.getFullYear() + ":" + (dateToday.getFullYear() + 2);
                $("#DATE_FROM").datepicker({
                    //minDate: 0,
                    dateFormat: "dd/mm/yy",
                    yearRange: yrRange,
                    changeMonth: true,
                    numberOfMonths: 1,
                    changeYear: true,
                    onClose: function (selectedDate, inst) {
                        var minDate = new Date(Date.parse(selectedDate));
                        //minDate.setDate(maxDate.getDate() + 1);
                        $("#DATE_TO").datepicker("option", "minDate", selectedDate);
                    }
                });

                $("#DATE_TO").datepicker({
                    minDate: "+1D",
                    dateFormat: "dd/mm/yy",
                    yearRange: yrRange,
                    changeMonth: true,
                    numberOfMonths: 1,
                    changeYear: true,
                    onClose: function (selectedDate, inst) {
                        var maxDate = new Date(Date.parse(selectedDate));
                        //maxDate.setDate(maxDate.getDate() - 1);
                        //$("#DATE_FROM").datepicker("option", "maxDate", maxDate);
                    }
                });
            });

            $("#IDENTITY").kendoComboBox({
                filter: "contains",
                change: function (e) {
                    var widget = e.sender;

                    if (widget.value() && widget.select() === -1) {
                        //custom has been selected
                        widget.value(""); //reset widget
                        //widget.trigger("change");
                    }
                }
            });
            $("#GENDER").kendoComboBox({
                filter: "contains",
                change: function (e) {
                    var widget = e.sender;

                    if (widget.value() && widget.select() === -1) {
                        //custom has been selected
                        widget.value(""); //reset widget
                        //widget.trigger("change");
                    }
                }
            });
            $("#PASSTYPECODE").kendoComboBox({
                filter: "contains",
                change: function (e) {
                    var widget = e.sender;

                    if (widget.value() && widget.select() === -1) {
                        //custom has been selected
                        widget.value(""); //reset widget
                        //widget.trigger("change");
                    }
                }
            });

              $('#deletImage a').click(function (e) {
            e.preventDefault();

            var id = $(this).attr("Id");

            var MSG = confirm("@Resources.Passes.ResourceManager.GetString("File_confirm_delete" + "_" + ViewBag.lang)");

            if (MSG) {

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DeleteImage")',
                    data: { id: id },
                    dataType: "json",
                    success: function () {
                        setTimeout(function () { location.reload(); }, 1);
                    },
                    error: function () {
                        alert("@Resources.Passes.ResourceManager.GetString("Error_delete_file" + "_" + ViewBag.lang)");
                    }
                });
            }
            })



        });




         function showpreview(input) {

            if (input.files && input.files[0]) {

                var val = $(input).val().toLowerCase(),
                    regex = new RegExp("(.*?)\.(gif|jpg|jpeg|JPEG|GIF|JPG)$");

                if (!(regex.test(val))) {
                    $(input).val('');
                    $('#imagePreview').css('display', 'none');

                    alert('@no_file_format');

                }
                else {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#imagePreview').css('display', 'inline');
                        $('#imagePreview').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }
        }

    </script>

    <script>






        function AddFiles() {
            //Build an array containing Customer records.


                var file_types = JSON.parse('@Html.Raw(Json.Encode(ViewBag.FILE_TYPES))');



                //Reference the container DIV.
                var fContainer = document.getElementById("fContainer")
                //Add  to DIV.
                var div = document.createElement("DIV");
                div.className = "bg-light p-2 rounded";
                div.id = "file_div";




                //Add the Options to the DropDownList.
                for (var i = 0; i < file_types.length; i++) {
                    //Create  element.
                    var f_id = "#ff_" + file_types[i].Value;
                    var ff = $(f_id).text();
                    console.log(ff);
                    if (ff != file_types[i].Value) {
                        var val = file_types[i].Text.split(/-(.*)/)[1];
                        console.log(val);
                        var val2 = file_types[i].Text.replace(/\-.*/g, "$'");



                        var files = document.createElement("INPUT");
                        files.name = "files";
                        files.type = "file";
                        files.id = "file_" + file_types[i].Value + "_" + val;
                        files.className = "form-control m-1";
                        files.onchange = function () { setFileType(this.id); };


                        var label = document.createElement("label");
                        //Set file Name in Text part.
                        label.htmlFor = "file_types_text" + i;
                        label.appendChild(document.createTextNode(val2));

                        var div_after = document.createElement("DIV");
                        div_after.id = "lbl" + file_types[i].Value;
                        var br2 = document.createElement("br");

                        //div.appendChild(file_types_codes);
                        div.appendChild(label);
                        div.appendChild(files);
                        div.appendChild(div_after);
                        div.appendChild(br2);
                        fContainer.appendChild(div);
                    }

                }


        }

        function setFileType(id) {
            console.log(id);
            var file_id = id.split('_')[1];
            console.log(file_id);
            var val = id.split('_')[2];
            console.log(val);

            var file_types_codes = document.createElement("INPUT");
            file_types_codes.type = "text";
            file_types_codes.name = "FILE_TYPES[]";
            file_types_codes.value = file_id;
            file_types_codes.hidden = true;
            var fContainer = document.getElementById("fContainer");
            fContainer.appendChild(file_types_codes);


            var file_types_text = document.createElement("INPUT");
            file_types_text.type = "text";
            file_types_text.name = "FILE_TYPES_TEXT[]";
            file_types_text.autocomplete = "off";
            file_types_text.placeholder = "@Resources.Settings.ResourceManager.GetString("REMARKS" + "_" + ViewBag.lang)";
            file_types_text.className = "col-md-12 form-control mr-1";


                    if (val == 1) {
                        file_types_text.placeholder = "@Resources.Passes.ResourceManager.GetString("worker_id_card_expaired" + "_" + ViewBag.lang)";
                        file_types_text.className = "col-md-12 form-control mr-1 datepicker_recurring_start";
                        var dateToday = new Date();
                        var yrRange = dateToday.getFullYear() + ":" + (dateToday.getFullYear() + 8);

                        $('body').on('focus', ".datepicker_recurring_start", function () {
                            $(this).datepicker(
                                {
                                dateFormat: "dd/mm/yy",
                                yearRange: yrRange,
                                changeMonth: true,
                                numberOfMonths: 1,
                                changeYear: true,
                            }
                            );
                        });

            }
            var z = "lbl" + file_id;
            var file_div = document.getElementById(z);
            file_div.appendChild(file_types_text);


        }



    </script>
   

    <script src="@Url.Content("~/Scripts/JsBarcode.all.js")"></script>
    <script>
        JsBarcode("#barcode3", "@barcode", {
            format: "code39",
            displayValue: false,
            fontSize: 20,
            height: 20,
            width:1

        });
    </script>


}
